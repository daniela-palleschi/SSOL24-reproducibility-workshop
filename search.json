[
  {
    "objectID": "examples/chromy-2023_eda.html",
    "href": "examples/chromy-2023_eda.html",
    "title": "EDA of Lacina et al. (2023)",
    "section": "",
    "text": "This script produces an exploratory data analysis of the L1 English experiment dataset from Chromý et al. (2023).\n\nSet-up\nLoad required packages.\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(janitor) # a package for tidying data\n\nLoad data.\n\ndf_chromy &lt;- read_csv(here(\"data\", \"chromy_et-al_2023_English_final.csv\")) |&gt; \n  # clean up names\n  clean_names() |&gt;\n  # replace r_t with rt_\n  rename_at(vars(starts_with(\"r_t\")), ~ str_replace(., \"r_t\", \"rt_\"))\n\n\n\nVariables\nCheck out variables.\n\nglimpse(df_chromy)\n\nRows: 57,024\nColumns: 21\n$ participant  &lt;chr&gt; \"participant_001\", \"participant_001\", \"participant_001\", …\n$ item_no      &lt;dbl&gt; 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 100, 100,…\n$ item         &lt;chr&gt; \"item11\", \"item11\", \"item11\", \"item11\", \"item11\", \"item11…\n$ atr_num      &lt;chr&gt; \"atr.pl\", \"atr.pl\", \"atr.pl\", \"atr.pl\", \"atr.pl\", \"atr.pl…\n$ verb_num     &lt;chr&gt; \"verb.pl\", \"verb.pl\", \"verb.pl\", \"verb.pl\", \"verb.pl\", \"v…\n$ word_no      &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, …\n$ word         &lt;chr&gt; \"The\", \"invoice\", \"for\", \"the\", \"lawyers\", \"definitely\", …\n$ read_times   &lt;dbl&gt; 385.0, 511.0, 297.3, 334.6, 345.5, 270.5, 337.5, 270.4, 2…\n$ answer_times &lt;dbl&gt; 2554, 2554, 2554, 2554, 2554, 2554, 2554, 2554, 2554, 255…\n$ sentence     &lt;chr&gt; \"The invoice for the lawyers definitely were fully paid b…\n$ vek          &lt;dbl&gt; 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 1…\n$ pohlavi      &lt;chr&gt; \"nechce\", \"nechce\", \"nechce\", \"nechce\", \"nechce\", \"nechce…\n$ question     &lt;chr&gt; \"Did the accuser pay the invoice?\", \"Did the accuser pay …\n$ answer       &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ correct      &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ n_char_sent  &lt;dbl&gt; 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 84, 84, 8…\n$ n_char_word  &lt;dbl&gt; 3, 7, 3, 3, 7, 10, 4, 5, 4, 2, 3, 10, 3, 9, 3, 3, 7, 12, …\n$ order        &lt;dbl&gt; 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 127, 128,…\n$ rt_inv2      &lt;dbl&gt; -50.96472, -44.23740, -57.99660, -54.66848, -53.79922, -6…\n$ log_rt       &lt;dbl&gt; 5.953243, 6.236370, 5.694742, 5.812936, 5.844993, 5.60027…\n$ rt_inv2resid &lt;dbl&gt; 1.7009043, 6.9133534, -5.3211461, -1.9881128, -2.6337226,…\n\n\n\nlength(unique(df_chromy$participant))\n\n[1] 198\n\n\nThere were 198 participants.\n\nlength(unique(df_chromy$item))\n\n[1] 24\n\n\nThere were 24 items.\n\nlength(unique(df_chromy$item_no))\n\n[1] 96\n\n\nThere were 96 unique item IDs, so 4 stimuli per item (we know this by the design).\n\ndf_chromy |&gt; \n  distinct(item, participant, .keep_all = T) |&gt; \n  tabyl(atr_num, verb_num) |&gt; \n  adorn_totals(where = c(\"col\", \"row\"))\n\n atr_num verb.pl verb.sg Total\n  atr.pl    1188    1188  2376\n  atr.sg    1188    1188  2376\n   Total    2376    2376  4752\n\n\nThere were 4752 unique trials (24 items x 198 participants). Evenly distributed across the four conditions.\n\ndf_chromy |&gt; \n  distinct(participant, item, .keep_all = T) |&gt; \n  count(participant) |&gt; \n  count(n)\n\n# A tibble: 1 × 2\n      n    nn\n  &lt;int&gt; &lt;int&gt;\n1    24   198\n\n\nEach participant saw 24 unique items.\n\n\nResponse time distributions\n\ndf_chromy |&gt; \n  filter(word_no %in% c(8)) |&gt; \n  summarise(\n    mean = mean(read_times, na.rm = T),\n    sd = sd(read_times, na.rm = T),\n    N = n(),\n    .by = c(atr_num, verb_num, word_no)\n  )\n\n# A tibble: 4 × 6\n  atr_num verb_num word_no  mean    sd     N\n  &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;\n1 atr.pl  verb.pl        8  380.  216.  1188\n2 atr.sg  verb.sg        8  355.  212.  1188\n3 atr.pl  verb.sg        8  363.  270.  1188\n4 atr.sg  verb.pl        8  408.  280.  1188\n\n\nLonger reading times for singular referents with plural verb than plural referent with singular verb (mismatch conditions).\n\ndf_chromy |&gt;\n  filter(word_no %in% c(6:9)) |&gt; \n  mutate(agreement = ifelse(str_sub(atr_num,-2) == str_sub(verb_num,-2), \"agree\", \"disagree\"),\n         condition = paste(atr_num, verb_num, sep = \"_\")) |&gt; \n  # glimpse() |&gt; \n  ggplot() +\n  aes(x = as_factor(word_no), y = read_times, shape = agreement, colour = condition) +\n  stat_summary(position = position_dodge(0.6)) +\n  geom_line(aes(group = condition), position = position_dodge(0.6))\n\n\n\n\n\n\n\n\n\n\nAccuracy distributions\n\ndf_chromy |&gt; \n  distinct(participant, item, .keep_all = T) |&gt; \n  tabyl(atr_num, verb_num, correct) |&gt; \n  adorn_totals(where = c(\"col\", \"row\"))\n\n$`0`\n atr_num verb.pl verb.sg Total\n  atr.pl      73      78   151\n  atr.sg      73      63   136\n   Total     146     141   287\n\n$`1`\n atr_num verb.pl verb.sg Total\n  atr.pl    1115    1110  2225\n  atr.sg    1115    1125  2240\n   Total    2230    2235  4465\n\n\n4465 correct responses overall, 287 incorrect."
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow.html",
    "href": "slides/day1/R-workflow/R-workflow.html",
    "title": "Building a reproducible workflow in R",
    "section": "",
    "text": "Today we will learn…\n\nhow to implement a project-oriented workflow in R\nhow to organise folders and file names\nhow to set up our first R project",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Building a reproducible workflow in R"
    ]
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow.html#broadening-the-reproducibilty-spectrum",
    "href": "slides/day1/R-workflow/R-workflow.html#broadening-the-reproducibilty-spectrum",
    "title": "Building a reproducible workflow in R",
    "section": "1.1 Broadening the reproducibilty spectrum",
    "text": "1.1 Broadening the reproducibilty spectrum\n\nthere are different levels of reproducibility\n\nthe bare minimum is sharing the code and data\nand including session information:\n\nwhich operating system was used\nwhich software/package versions were used\n\n\ngoing bigger:\n\nproject-oriented workflow\nproject-specific filepaths\ncontained in a single project folder\n\nwe will be using RProjects to achieve this",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Building a reproducible workflow in R"
    ]
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow.html#project-management",
    "href": "slides/day1/R-workflow/R-workflow.html#project-management",
    "title": "Building a reproducible workflow in R",
    "section": "1.2 Project management",
    "text": "1.2 Project management\n\nfolder structure\nproject-relative file paths\nappropriate documentation\n\ne.g., README\n\nit’s great to map out your project structure early on\n\nbut it will grow as you go along\nreproducible principles facilitate adapting as it grows",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Building a reproducible workflow in R"
    ]
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow.html#literate-programming",
    "href": "slides/day1/R-workflow/R-workflow.html#literate-programming",
    "title": "Building a reproducible workflow in R",
    "section": "1.3 Literate programming",
    "text": "1.3 Literate programming\n\nInstead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do.\n\n— Knuth (1984), p. 97\n\n\n\noriginally used to refer to writing programs\nbut also applies to analysis code\n\nespecially if we’re aiming for reproducibility\n\n\n\n\nmain concepts:\n\ncode is linear (this pre-dates Knuth, 1984)\ninformative but concise commenting\n\n\n\n\nmain benefits:\n\nfacilitates maintenance\nhelpful for future-you, collaborators, etc.",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Building a reproducible workflow in R"
    ]
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow.html#documentation",
    "href": "slides/day1/R-workflow/R-workflow.html#documentation",
    "title": "Building a reproducible workflow in R",
    "section": "1.4 Documentation",
    "text": "1.4 Documentation\n\nmetadata\n\nproject README\ncodebook/data dictionary\n\nREADME should contain\n\na project description\nrelevant links\ndescription of folder structure\n\ncan be updated as the project develops\nREADME.md files in GitHub/Lab are automatically used as a project description\n\n.md is a plain text document\nuses markdown syntax",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Building a reproducible workflow in R"
    ]
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow.html#version-control-not-covered-in-this-workshop",
    "href": "slides/day1/R-workflow/R-workflow.html#version-control-not-covered-in-this-workshop",
    "title": "Building a reproducible workflow in R",
    "section": "1.5 Version control (not covered in this workshop)",
    "text": "1.5 Version control (not covered in this workshop)\n\ngit: local tracking\nuseful for the analysis and writing phases\n\nbut can be tricky for collaboration\n\nGitHub/GitLab: remote tracking\n\nstore your changes to your local git repository\nthen push them to your remote repository\n\nsafe guards against local hardware/software issues\n\nlost or damaged computer or local files\n\nand allows for collaboration or sharing",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Building a reproducible workflow in R"
    ]
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow.html#persistant-public-storage",
    "href": "slides/day1/R-workflow/R-workflow.html#persistant-public-storage",
    "title": "Building a reproducible workflow in R",
    "section": "1.6 Persistant (public) storage",
    "text": "1.6 Persistant (public) storage\n\nGitHub/Lab are sub-optimal\n\ndeveloper-focused\ntypically lack thorough documentation/metadata\nnot very user-friendly for non-users\n\nOSF, Zenodo\n\nOpen Science-focused\ncan be linked to a GitHub/Lab repository\nfacilitate thorough documentation\nuser-friendly",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Building a reproducible workflow in R"
    ]
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow.html#writing-not-covered-in-this-workshop",
    "href": "slides/day1/R-workflow/R-workflow.html#writing-not-covered-in-this-workshop",
    "title": "Building a reproducible workflow in R",
    "section": "1.7 Writing (not covered in this workshop)",
    "text": "1.7 Writing (not covered in this workshop)\n\ndynamic reports with Markdown syntax\n\ne.g., Rmarkdown, Quarto\nintegration of data, code, and prose\n\nfacilitates cross-referencing within document\nintegration of citation management tools\nsupports LaTeX syntax for example sentences and tables\n\n\npapaja package for APA-formatted Rmarkdown documents\nchallenge: collaboration\n\nnot all collaborators know these tools\ntrack changes not currently possible",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Building a reproducible workflow in R"
    ]
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow_slides.html#broadening-the-reproducibilty-spectrum",
    "href": "slides/day1/R-workflow/R-workflow_slides.html#broadening-the-reproducibilty-spectrum",
    "title": "Building a reproducible workflow in R",
    "section": "Broadening the reproducibilty spectrum",
    "text": "Broadening the reproducibilty spectrum\n\nthere are different levels of reproducibility\n\nthe bare minimum is sharing the code and data\n\nand including session information:\n\nwhich operating system was used\nwhich software/package versions were used\n\n\n\n\ngoing bigger:\n\nproject-oriented workflow\nproject-specific filepaths\ncontained in a single project folder\n\n\nwe will be using RProjects to achieve this"
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow_slides.html#project-management",
    "href": "slides/day1/R-workflow/R-workflow_slides.html#project-management",
    "title": "Building a reproducible workflow in R",
    "section": "Project management",
    "text": "Project management\n\nfolder structure\nproject-relative file paths\nappropriate documentation\n\ne.g., README\n\n\nit’s great to map out your project structure early on\n\nbut it will grow as you go along\nreproducible principles facilitate adapting as it grows"
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow_slides.html#literate-programming",
    "href": "slides/day1/R-workflow/R-workflow_slides.html#literate-programming",
    "title": "Building a reproducible workflow in R",
    "section": "Literate programming",
    "text": "Literate programming\n\nInstead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do.\n\n— Knuth (1984), p. 97\n\n\n\noriginally used to refer to writing programs\nbut also applies to analysis code\n\nespecially if we’re aiming for reproducibility\n\n\n\n\n\n\nmain concepts:\n\ncode is linear (this pre-dates Knuth, 1984)\n\ninformative but concise commenting\n\n\n\n\n\n\nmain benefits:\n\nfacilitates maintenance\nhelpful for future-you, collaborators, etc."
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow_slides.html#documentation",
    "href": "slides/day1/R-workflow/R-workflow_slides.html#documentation",
    "title": "Building a reproducible workflow in R",
    "section": "Documentation",
    "text": "Documentation\n\n\nmetadata\n\nproject README\ncodebook/data dictionary\n\n\n\nREADME should contain\n\na project description\nrelevant links\ndescription of folder structure\n\n\ncan be updated as the project develops\n\nREADME.md files in GitHub/Lab are automatically used as a project description\n\n\n.md is a plain text document\nuses markdown syntax"
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow_slides.html#version-control-not-covered-in-this-workshop",
    "href": "slides/day1/R-workflow/R-workflow_slides.html#version-control-not-covered-in-this-workshop",
    "title": "Building a reproducible workflow in R",
    "section": "Version control (not covered in this workshop)",
    "text": "Version control (not covered in this workshop)\n\ngit: local tracking\nuseful for the analysis and writing phases\n\nbut can be tricky for collaboration\n\n\nGitHub/GitLab: remote tracking\n\nstore your changes to your local git repository\nthen push them to your remote repository\n\n\nsafe guards against local hardware/software issues\n\nlost or damaged computer or local files\n\n\nand allows for collaboration or sharing"
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow_slides.html#persistant-public-storage",
    "href": "slides/day1/R-workflow/R-workflow_slides.html#persistant-public-storage",
    "title": "Building a reproducible workflow in R",
    "section": "Persistant (public) storage",
    "text": "Persistant (public) storage\n\nGitHub/Lab are sub-optimal\n\ndeveloper-focused\ntypically lack thorough documentation/metadata\nnot very user-friendly for non-users\n\n\nOSF, Zenodo\n\nOpen Science-focused\ncan be linked to a GitHub/Lab repository\nfacilitate thorough documentation\nuser-friendly"
  },
  {
    "objectID": "slides/day1/R-workflow/R-workflow_slides.html#writing-not-covered-in-this-workshop",
    "href": "slides/day1/R-workflow/R-workflow_slides.html#writing-not-covered-in-this-workshop",
    "title": "Building a reproducible workflow in R",
    "section": "Writing (not covered in this workshop)",
    "text": "Writing (not covered in this workshop)\n\n\ndynamic reports with Markdown syntax\n\ne.g., Rmarkdown, Quarto\nintegration of data, code, and prose\n\nfacilitates cross-referencing within document\nintegration of citation management tools\nsupports LaTeX syntax for example sentences and tables\n\n\n\n\npapaja package for APA-formatted Rmarkdown documents\n\nchallenge: collaboration\n\nnot all collaborators know these tools\ntrack changes not currently possible"
  },
  {
    "objectID": "slides/packages/packages.html",
    "href": "slides/packages/packages.html",
    "title": "Package management",
    "section": "",
    "text": "Today we will…\n\nlearn about R package repositories\nlearn how package dependencies can break code\nuse the renv package to create and maintain a project-relative package library"
  },
  {
    "objectID": "slides/packages/packages.html#cran-packages",
    "href": "slides/packages/packages.html#cran-packages",
    "title": "Package management",
    "section": "1.1 CRAN packages",
    "text": "1.1 CRAN packages\n\nthe Comprehensive R Archive Network: R’s central software repository\n\ncurrently 20,888 available!\n\nan archive of the most recent package versions\nfor a package to be included in the CRAN, it must go through a lot of tests and checks\n\nany updates or changes must again be reviewed before being added to CRAN\n\nCRAN packages can be installed using install.packages(), as we’ve been doing\n\n\n\n\n\n\n\npacman package (optional)\n\n\n\n\n\na package management tool\nwe’ll use the p_load() function to replace install.packages() and library() in our worksflow\n\ntakes a list of packages, and checks if each package is installed already\nif yes, the package is loaded (as with library())\nif no, the package is installed (as with install.packages()) and then loaded (as with library())\n\nonly works with CRAN packages (which is all we have for now anyway), although pacman has a function for developer packages (which we’ll talk about later)\n\nTo get started: install pacman (install.packages(\"pacman\")). Then, you can load in your packages using pacman::p_load(), or with a long list of library() calls like we’ve previously done (you see why I prefer p_load()!).\n\n\n\n\n\nLoading packages with `pacman::p_load()`\n\npacman::p_load(tidyverse, here, janitor)\n\n\n\n\n\n\nLoading packages with `library()`\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(janitor)\n\n\n\n\nThe additional benefit of p_load() is that, if you don’t actually have one of the packages installed it will automatically be installed and then loaded. With library() you would instead get an error message."
  },
  {
    "objectID": "slides/packages/packages.html#developer-packages",
    "href": "slides/packages/packages.html#developer-packages",
    "title": "Package management",
    "section": "1.2 Developer packages",
    "text": "1.2 Developer packages\n\noften hosted on GitHub or GitLab, where packages are typically developed before being reviewed and added to the CRAN\n\nbenefit: you can make whatever you changes to your package that you like without having to pass a review on the CRAN\n\nsince CRAN packages are often developed on GH or GL, pre-release (beta) versions will often be available on a GH repo\npackages/package versions on GH cannot be installed via install.packages()\n\nwe’ll see later how to do this"
  },
  {
    "objectID": "slides/packages/packages.html#dependencies",
    "href": "slides/packages/packages.html#dependencies",
    "title": "Package management",
    "section": "1.3 Dependencies",
    "text": "1.3 Dependencies\n\nsome packages are dependent on specific versions of other packages\n\nif so, you will be prompted during installation to install these dependencies\nbut beware: sometimes this overwrites an existing package version you already have, which can break code that was written with this older version\n\nthis is especially true because, as our projects are currently set up, we have one global package version on our computer\n\nso analyses we ran 3 years ago would’ve used older versions of packages\nwhen we update these packages for current analyses, this might disrupt the code from 3 years ago\n\nwe’ll see one (partial) solution for this problem soon"
  },
  {
    "objectID": "slides/packages/packages.html#updating-packages",
    "href": "slides/packages/packages.html#updating-packages",
    "title": "Package management",
    "section": "2.1 Updating packages",
    "text": "2.1 Updating packages\n\nto check if a package needs updating, you can:\n\ngo to Tools &gt; Check for package updates, or\nrun update.packages()\n\neach will tell you which packages can be updated to which versions\n\nand give you the option of updating these packages"
  },
  {
    "objectID": "slides/packages/packages.html#package-library",
    "href": "slides/packages/packages.html#package-library",
    "title": "Package management",
    "section": "2.2 Package library",
    "text": "2.2 Package library\n\nwhere do all these installed packages go?\n\na folder that contains all the packages, called a library\n\nto find out where this (global) package library is, run .libPaths()\n\n\n.libPaths()\n\n\nthe output should currently produce a single file path, something like:\n\n\n&gt; .libPaths()\n[1] \"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\"\n\n\nthis is the location of your global package library"
  },
  {
    "objectID": "slides/packages/packages.html#package-versions-and-reproducibility",
    "href": "slides/packages/packages.html#package-versions-and-reproducibility",
    "title": "Package management",
    "section": "2.3 Package versions and reproducibility",
    "text": "2.3 Package versions and reproducibility\n\nwe’ve seen that package versions and dependencies can easily break our existing code\nthis means that older projects that were built using previous package versions won’t be able to run if we update these packages in our global package library\n\nalso a problem in the future: our current code will depend on the package versions we’re using today\n\nwe need a project-relative package library that is independent of the global library\n\nwe’ll use the renv package to do this"
  },
  {
    "objectID": "slides/packages/packages.html#limits-of-renv",
    "href": "slides/packages/packages.html#limits-of-renv",
    "title": "Package management",
    "section": "3.1 Limits of renv",
    "text": "3.1 Limits of renv\nrenv…\n\n\n…can\n\nkeep track of packages and their versions\ncreate a project-specific library per R version\nautomatically load/install these package versions\n\n\n…cannot\n\nmake a project reproducible across all computational environments\nload/install package versions that are incompatible with current R versions or computational environments\nguarantee full long-term reproduciblity"
  },
  {
    "objectID": "slides/packages/packages.html#renv-workflow",
    "href": "slides/packages/packages.html#renv-workflow",
    "title": "Package management",
    "section": "3.2 renv workflow",
    "text": "3.2 renv workflow\n\nFigure 1 visualises a project workflow with renv\nnext we’ll see how we use these functions to set-up and maintain a project-specific package library\n\n\n\n\n\n\n\n\n\nFigure 1: Source: CRAN vignette ‘Introduction to renv’ (all rights reserved)"
  },
  {
    "objectID": "slides/packages/packages.html#new-files",
    "href": "slides/packages/packages.html#new-files",
    "title": "Package management",
    "section": "4.1 New files",
    "text": "4.1 New files\n\nrenv::init() creates three new files or directories\n\nrenv.lock\nrenv/\n.Rprofile\n\nexplore these files/folders and see if you can figure out what they contain"
  },
  {
    "objectID": "slides/packages/packages.html#renv.lock",
    "href": "slides/packages/packages.html#renv.lock",
    "title": "Package management",
    "section": "4.2 renv.lock",
    "text": "4.2 renv.lock\n\ncontains metadata about the packages and their versions that you have installed\n\nthis is enough metadata to re-install these package versions on a new machine\n\ntwo main components:\n\nR: info on R version and list of repositories where packages were installed from\nPackages: a record per package with necessary info for re-installation"
  },
  {
    "objectID": "slides/packages/packages.html#renv-1",
    "href": "slides/packages/packages.html#renv-1",
    "title": "Package management",
    "section": "4.3 renv/",
    "text": "4.3 renv/\n\nimportantly, contains your project-relative library/\n\nthis is instead of using the one library on your computer\n\nprovides us with “isolation”: the package versions used in an R Project is independent of the global library\n\nin other words, different R Projects can use different package versions\nupdating packages globally, or in one project, will not affect other project libraries"
  },
  {
    "objectID": "slides/packages/packages.html#rprofile",
    "href": "slides/packages/packages.html#rprofile",
    "title": "Package management",
    "section": "4.4 .RProfile",
    "text": "4.4 .RProfile\n\nruns whenver you (re-)start your R Project\nat this point, should contain a single line:\n\n\nsource(\"renv/activate.R\")\n\n\nif you go to this R script, you’ll send a lot of code\n\nthis essentially loads in your project library"
  },
  {
    "objectID": "slides/packages/packages.html#project-library",
    "href": "slides/packages/packages.html#project-library",
    "title": "Package management",
    "section": "4.5 Project library",
    "text": "4.5 Project library\n\nnow if we re-run .libPaths(), we should see our project library\n\n\n\n\nRun in the Console\n\n.libPaths()\n\n\n\n&gt; .libPaths()\n[1] \"/Users/danielapalleschi/Documents/IdSL/Teaching/SoSe24/M.A./r4repro_SoSe2024/renv/library/macos/R-4.4/aarch64-apple-darwin20\"\n[2] \"/Users/danielapalleschi/Library/Caches/org.R-project.R/R/renv/sandbox/macos/R-4.4/aarch64-apple-darwin20/f7156815\"  \n\n\n[1] is the local project library path\n[2] is the path to a global package cache that renv maintains so that you don’t repeatedly download packages to your machine for each project library\n\ne.g., if we already have ggplot2 installed globally on our machine, whenever we want to add it to a project library we don’t need to re-install it entirely from the CRAN (unless we want a different package version)"
  },
  {
    "objectID": "slides/packages/packages.html#installing-a-new-package",
    "href": "slides/packages/packages.html#installing-a-new-package",
    "title": "Package management",
    "section": "5.1 Installing a new package",
    "text": "5.1 Installing a new package\n\nlet’s also install a package I’m confident you don’t already have on your machine (as you might’ve already worked with lme4 in other classes)\n\n[brms] for Bayesian regression models using Stan\n\n\n\n\nCode\ninstall.packages(\"brms\")\nrenv::install(\"brms\")\n\n\n\nand if we want a specific package version:\n\n\nrenv::install(\"brms@2.19.0\")"
  },
  {
    "objectID": "slides/packages/packages.html#installing-developer-packages",
    "href": "slides/packages/packages.html#installing-developer-packages",
    "title": "Package management",
    "section": "5.2 Installing developer packages",
    "text": "5.2 Installing developer packages\n\nnot all packages are available on the CRAN\n\nwe can install developer packages from GitHub or GitLab using, e.g., the install_github() function from either the remotes or devtools package (both are very common)\n\n\n\nremotes::install_github(\"paul-buerkner/brms\")\ndevtools::install_github(\"paul-buerkner/brms\")\n\n\nor we can use renv::install()\n\n\n# most recent version\nrenv::install(\"paul-buerkner/brms\")\n\n\n# a specific previous version, for which you'll need the commit ID\nrenv::install(\"paul-buerkner/brms@db6ddde90ba533cb3942bc5a62b03803773b9844\")"
  },
  {
    "objectID": "slides/packages/packages.html#updating-renv.lock-file",
    "href": "slides/packages/packages.html#updating-renv.lock-file",
    "title": "Package management",
    "section": "6.1 Updating renv.lock file",
    "text": "6.1 Updating renv.lock file\n\nto update the lockfile and library, simply run:\n\n\nrenv::snapshot()\n\n\nyou’ll be given a list of changes to be made and asked if you want to proceed\n\nif not problems are mentioned, then you can go ahead"
  },
  {
    "objectID": "slides/packages/packages_slides.html#cran-packages",
    "href": "slides/packages/packages_slides.html#cran-packages",
    "title": "Package management",
    "section": "CRAN packages",
    "text": "CRAN packages\n\nthe Comprehensive R Archive Network: R’s central software repository\n\ncurrently 20,888 available!\n\n\nan archive of the most recent package versions\nfor a package to be included in the CRAN, it must go through a lot of tests and checks\n\nany updates or changes must again be reviewed before being added to CRAN\n\n\nCRAN packages can be installed using install.packages(), as we’ve been doing"
  },
  {
    "objectID": "slides/packages/packages_slides.html#section",
    "href": "slides/packages/packages_slides.html#section",
    "title": "Package management",
    "section": "",
    "text": "pacman package (optional)\n\n\n\n\na package management tool\nwe’ll use the p_load() function to replace install.packages() and library() in our worksflow\n\ntakes a list of packages, and checks if each package is installed already\nif yes, the package is loaded (as with library())\nif no, the package is installed (as with install.packages()) and then loaded (as with library())\n\n\nonly works with CRAN packages (which is all we have for now anyway), although pacman has a function for developer packages (which we’ll talk about later)\n\nTo get started: install pacman (install.packages(\"pacman\")). Then, you can load in your packages using pacman::p_load(), or with a long list of library() calls like we’ve previously done (you see why I prefer p_load()!).\n\n\n\n\n\nLoading packages with `pacman::p_load()`\n\npacman::p_load(tidyverse, here, janitor)\n\n\n\n\n\n\nLoading packages with `library()`\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(janitor)\n\n\n\n\nThe additional benefit of p_load() is that, if you don’t actually have one of the packages installed it will automatically be installed and then loaded. With library() you would instead get an error message."
  },
  {
    "objectID": "slides/packages/packages_slides.html#developer-packages",
    "href": "slides/packages/packages_slides.html#developer-packages",
    "title": "Package management",
    "section": "Developer packages",
    "text": "Developer packages\n\noften hosted on GitHub or GitLab, where packages are typically developed before being reviewed and added to the CRAN\n\nbenefit: you can make whatever you changes to your package that you like without having to pass a review on the CRAN\n\n\nsince CRAN packages are often developed on GH or GL, pre-release (beta) versions will often be available on a GH repo\npackages/package versions on GH cannot be installed via install.packages()\n\nwe’ll see later how to do this"
  },
  {
    "objectID": "slides/packages/packages_slides.html#dependencies",
    "href": "slides/packages/packages_slides.html#dependencies",
    "title": "Package management",
    "section": "Dependencies",
    "text": "Dependencies\n\nsome packages are dependent on specific versions of other packages\n\nif so, you will be prompted during installation to install these dependencies\nbut beware: sometimes this overwrites an existing package version you already have, which can break code that was written with this older version\n\n\nthis is especially true because, as our projects are currently set up, we have one global package version on our computer\n\nso analyses we ran 3 years ago would’ve used older versions of packages\nwhen we update these packages for current analyses, this might disrupt the code from 3 years ago\n\n\nwe’ll see one (partial) solution for this problem soon"
  },
  {
    "objectID": "slides/packages/packages_slides.html#updating-packages",
    "href": "slides/packages/packages_slides.html#updating-packages",
    "title": "Package management",
    "section": "Updating packages",
    "text": "Updating packages\n\nto check if a package needs updating, you can:\n\ngo to Tools &gt; Check for package updates, or\nrun update.packages()\n\n\n\neach will tell you which packages can be updated to which versions\n\nand give you the option of updating these packages"
  },
  {
    "objectID": "slides/packages/packages_slides.html#package-library",
    "href": "slides/packages/packages_slides.html#package-library",
    "title": "Package management",
    "section": "Package library",
    "text": "Package library\n\nwhere do all these installed packages go?\n\na folder that contains all the packages, called a library\n\n\nto find out where this (global) package library is, run .libPaths()\n\n\n\n.libPaths()\n\n\nthe output should currently produce a single file path, something like:\n\n\n&gt; .libPaths()\n[1] \"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\"\n\n\nthis is the location of your global package library"
  },
  {
    "objectID": "slides/packages/packages_slides.html#package-versions-and-reproducibility",
    "href": "slides/packages/packages_slides.html#package-versions-and-reproducibility",
    "title": "Package management",
    "section": "Package versions and reproducibility",
    "text": "Package versions and reproducibility\n\nwe’ve seen that package versions and dependencies can easily break our existing code\nthis means that older projects that were built using previous package versions won’t be able to run if we update these packages in our global package library\n\nalso a problem in the future: our current code will depend on the package versions we’re using today\n\n\nwe need a project-relative package library that is independent of the global library\n\nwe’ll use the renv package to do this"
  },
  {
    "objectID": "slides/packages/packages_slides.html#limits-of-renv",
    "href": "slides/packages/packages_slides.html#limits-of-renv",
    "title": "Package management",
    "section": "Limits of renv\n",
    "text": "Limits of renv\n\nrenv…\n\n\n…can\n\nkeep track of packages and their versions\ncreate a project-specific library per R version\nautomatically load/install these package versions\n\n\n…cannot\n\nmake a project reproducible across all computational environments\nload/install package versions that are incompatible with current R versions or computational environments\nguarantee full long-term reproduciblity"
  },
  {
    "objectID": "slides/packages/packages_slides.html#renv-workflow",
    "href": "slides/packages/packages_slides.html#renv-workflow",
    "title": "Package management",
    "section": "\nrenv workflow",
    "text": "renv workflow\n\n\nFigure 1 visualises a project workflow with renv\n\nnext we’ll see how we use these functions to set-up and maintain a project-specific package library\n\n\n\nFigure 1: Source: CRAN vignette ‘Introduction to renv’ (all rights reserved)"
  },
  {
    "objectID": "slides/packages/packages_slides.html#section-1",
    "href": "slides/packages/packages_slides.html#section-1",
    "title": "Package management",
    "section": "",
    "text": "you should see something like this in the Console:\n\n\n- Linking packages into the project library ... [137/137] Done!\n- Resolving missing dependencies ... \n# Installing packages --------------------------------------------------------\nThe following package(s) will be updated in the lockfile:\n\n# CRAN -----------------------------------------------------------------------\n[long list of packages and their versions]\n\nThe version of R recorded in the lockfile will be updated:\n- R               [* -&gt; 4.4.0]\n\n- Lockfile written to \"~/Documents/IdSL/Teaching/SoSe24/M.A./r4repro_student/renv.lock\".\n\nRestarting R session...\n\n- Project '~/Documents/IdSL/Teaching/SoSe24/M.A./r4repro_student' loaded. [renv 1.0.7]"
  },
  {
    "objectID": "slides/packages/packages_slides.html#new-files",
    "href": "slides/packages/packages_slides.html#new-files",
    "title": "Package management",
    "section": "New files",
    "text": "New files\n\n\nrenv::init() creates three new files or directories\n\nrenv.lock\nrenv/\n.Rprofile\n\n\nexplore these files/folders and see if you can figure out what they contain"
  },
  {
    "objectID": "slides/packages/packages_slides.html#renv.lock",
    "href": "slides/packages/packages_slides.html#renv.lock",
    "title": "Package management",
    "section": "renv.lock",
    "text": "renv.lock\n\ncontains metadata about the packages and their versions that you have installed\n\nthis is enough metadata to re-install these package versions on a new machine\n\n\ntwo main components:\n\n\nR: info on R version and list of repositories where packages were installed from\n\nPackages: a record per package with necessary info for re-installation"
  },
  {
    "objectID": "slides/packages/packages_slides.html#renv-1",
    "href": "slides/packages/packages_slides.html#renv-1",
    "title": "Package management",
    "section": "renv/",
    "text": "renv/\n\nimportantly, contains your project-relative library/\n\nthis is instead of using the one library on your computer\n\n\nprovides us with “isolation”: the package versions used in an R Project is independent of the global library\n\nin other words, different R Projects can use different package versions\nupdating packages globally, or in one project, will not affect other project libraries"
  },
  {
    "objectID": "slides/packages/packages_slides.html#rprofile",
    "href": "slides/packages/packages_slides.html#rprofile",
    "title": "Package management",
    "section": ".RProfile",
    "text": ".RProfile\n\nruns whenver you (re-)start your R Project\nat this point, should contain a single line:\n\n\nsource(\"renv/activate.R\")\n\n\nif you go to this R script, you’ll send a lot of code\n\nthis essentially loads in your project library"
  },
  {
    "objectID": "slides/packages/packages_slides.html#project-library",
    "href": "slides/packages/packages_slides.html#project-library",
    "title": "Package management",
    "section": "Project library",
    "text": "Project library\n\nnow if we re-run .libPaths(), we should see our project library\n\n\n\n\nRun in the Console\n\n.libPaths()\n\n\n\n&gt; .libPaths()\n[1] \"/Users/danielapalleschi/Documents/IdSL/Teaching/SoSe24/M.A./r4repro_SoSe2024/renv/library/macos/R-4.4/aarch64-apple-darwin20\"\n[2] \"/Users/danielapalleschi/Library/Caches/org.R-project.R/R/renv/sandbox/macos/R-4.4/aarch64-apple-darwin20/f7156815\"  \n\n\n\n[1] is the local project library path\n\n[2] is the path to a global package cache that renv maintains so that you don’t repeatedly download packages to your machine for each project library\n\ne.g., if we already have ggplot2 installed globally on our machine, whenever we want to add it to a project library we don’t need to re-install it entirely from the CRAN (unless we want a different package version)"
  },
  {
    "objectID": "slides/packages/packages_slides.html#installing-a-new-package",
    "href": "slides/packages/packages_slides.html#installing-a-new-package",
    "title": "Package management",
    "section": "Installing a new package",
    "text": "Installing a new package\n\nlet’s also install a package I’m confident you don’t already have on your machine (as you might’ve already worked with lme4 in other classes)\n\n[brms] for Bayesian regression models using Stan\n\n\n\n\nCodeinstall.packages(\"brms\")\nrenv::install(\"brms\")\n\n\n\nand if we want a specific package version:\n\n\nrenv::install(\"brms@2.19.0\")"
  },
  {
    "objectID": "slides/packages/packages_slides.html#installing-developer-packages",
    "href": "slides/packages/packages_slides.html#installing-developer-packages",
    "title": "Package management",
    "section": "Installing developer packages",
    "text": "Installing developer packages\n\nnot all packages are available on the CRAN\n\nwe can install developer packages from GitHub or GitLab using, e.g., the install_github() function from either the remotes or devtools package (both are very common)\n\n\n\n\nremotes::install_github(\"paul-buerkner/brms\")\ndevtools::install_github(\"paul-buerkner/brms\")\n\n\n\nor we can use renv::install()\n\n\n\n# most recent version\nrenv::install(\"paul-buerkner/brms\")\n\n\n# a specific previous version, for which you'll need the commit ID\nrenv::install(\"paul-buerkner/brms@db6ddde90ba533cb3942bc5a62b03803773b9844\")"
  },
  {
    "objectID": "slides/packages/packages_slides.html#updating-renv.lock-file",
    "href": "slides/packages/packages_slides.html#updating-renv.lock-file",
    "title": "Package management",
    "section": "Updating renv.lock file",
    "text": "Updating renv.lock file\n\nto update the lockfile and library, simply run:\n\n\nrenv::snapshot()\n\n\nyou’ll be given a list of changes to be made and asked if you want to proceed\n\nif not problems are mentioned, then you can go ahead"
  },
  {
    "objectID": "slides/day3/repro_code.html",
    "href": "slides/day3/repro_code.html",
    "title": "Writing Reproducible Code",
    "section": "",
    "text": "learn about literate programming and modular analyses\ncreate and render a dynamic report with Quarto\nload data\ninclude a table and figure"
  },
  {
    "objectID": "slides/day3/repro_code.html#writing-linear-code",
    "href": "slides/day3/repro_code.html#writing-linear-code",
    "title": "Writing Reproducible Code",
    "section": "Writing linear code",
    "text": "Writing linear code\n\nyou need to load a package before you call a function from it\n\nif we’re just working in an R session, before means temporally prior\nwith linear code, before means higher up in the script\n\nsuch pre-requisite code must\n\nbe present in the script\nappear above the first line of code that uses a function from this package\n\nmissing pre-requisite code might not throw an error message\n\nbut might produce output we aren’t expecting\ne.g., forgetting to filter out certain observations\nor forgetting that some observations have been filtered out"
  },
  {
    "objectID": "slides/day3/repro_code.html#literate-programming",
    "href": "slides/day3/repro_code.html#literate-programming",
    "title": "Writing Reproducible Code",
    "section": "Literate programming",
    "text": "Literate programming\n\nintroduced in Knuth (1984)\nrefers to writing and documenting our code so that humans can understand it\n\nimportant for us: we are (generally) not professional programmers, nor are our peers\n\nwe need to not only know what our code is doing when we look back at it in the future/share it\nthe easiest way: informative comments\n\nthe length and frequency of these comments is your choice"
  },
  {
    "objectID": "slides/day3/repro_code.html#example-r-script",
    "href": "slides/day3/repro_code.html#example-r-script",
    "title": "Writing Reproducible Code",
    "section": "Example R script",
    "text": "Example R script\n\n# Analysis script for phoneme paper\n# author: Joe DiMaggio\n# date: Feb. 29, 2024\n# purpose: analyse cleaned dataset\n\n# Set-up ###\n\n# load required packages\nlibrary(dplyr)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(lme4)\nlibrary(broom.mixed) # tidy model summaries\nlibrary(ggeffects) # model predictions\nlibrary(here) # project-relative file path\n\n# load-in data\ndf_phon &lt;- read_csv(here(\"data\", \"phoneme_tidy_data.csv\"))\n\n# Explore data ###\n\n\nbegins with some meta-information about the document, including its purpose\n\naids in knowing which scripts to run in which sequence\n\nthere are three hashtags after some headings (###)\n\nthis is helpful because it structures the outline of the document in RStudio\n\nthe purpose of chunks of code are written above\n\ndescription of specific lines of code are also given"
  },
  {
    "objectID": "slides/day3/repro_code.html#structure-your-reports",
    "href": "slides/day3/repro_code.html#structure-your-reports",
    "title": "Writing Reproducible Code",
    "section": "Structure your reports",
    "text": "Structure your reports\n\ndescribe the function/purpose at the beginning\ndocument your train of thought and findings throughout the script\n\ne.g., why are you producing this plot, what does it tell you?\n\ngive an overview of the findings/end result at the end\nit’s wise to avoid very long, multi-purpose scripts\n\nrule of thumb: one script per product or purpose\ne.g., data cleaning, exploration, analysis, publiation figures, etc."
  },
  {
    "objectID": "slides/day3/repro_code.html#session-information",
    "href": "slides/day3/repro_code.html#session-information",
    "title": "Writing Reproducible Code",
    "section": "Session Information",
    "text": "Session Information\n\nR and R package versions are both open source, and are frequently updated\n\nyou might’ve run your code using dplyr version 1.1.0 or later, which introduced the .by per-operation grouping argument\nwhat happens when somebody who has an older version of dplyr tries to run your code?\n\nThey won’t be able to!\n\nthe reverse of this situation is more common:\n\na newer version of a package no longer supports a deprecated function or argument"
  },
  {
    "objectID": "slides/day3/repro_code.html#printing-session-info",
    "href": "slides/day3/repro_code.html#printing-session-info",
    "title": "Writing Reproducible Code",
    "section": "Printing session info",
    "text": "Printing session info\n\nso, print your session info at the end of every script:\n\n\nsessionInfo()"
  },
  {
    "objectID": "slides/day3/repro_code_slides.html#writing-linear-code",
    "href": "slides/day3/repro_code_slides.html#writing-linear-code",
    "title": "Writing Reproducible Code",
    "section": "Writing linear code",
    "text": "Writing linear code\n\nyou need to load a package before you call a function from it\n\nif we’re just working in an R session, before means temporally prior\nwith linear code, before means higher up in the script\n\n\nsuch pre-requisite code must\n\nbe present in the script\nappear above the first line of code that uses a function from this package\n\n\nmissing pre-requisite code might not throw an error message\n\nbut might produce output we aren’t expecting\ne.g., forgetting to filter out certain observations\nor forgetting that some observations have been filtered out"
  },
  {
    "objectID": "slides/day3/repro_code_slides.html#literate-programming",
    "href": "slides/day3/repro_code_slides.html#literate-programming",
    "title": "Writing Reproducible Code",
    "section": "Literate programming",
    "text": "Literate programming\n\nintroduced in Knuth (1984)\n\nrefers to writing and documenting our code so that humans can understand it\n\nimportant for us: we are (generally) not professional programmers, nor are our peers\n\n\nwe need to not only know what our code is doing when we look back at it in the future/share it\nthe easiest way: informative comments\n\nthe length and frequency of these comments is your choice"
  },
  {
    "objectID": "slides/day3/repro_code_slides.html#example-r-script",
    "href": "slides/day3/repro_code_slides.html#example-r-script",
    "title": "Writing Reproducible Code",
    "section": "Example R script",
    "text": "Example R script\n\n# Analysis script for phoneme paper\n# author: Joe DiMaggio\n# date: Feb. 29, 2024\n# purpose: analyse cleaned dataset\n\n# Set-up ###\n\n# load required packages\nlibrary(dplyr)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(lme4)\nlibrary(broom.mixed) # tidy model summaries\nlibrary(ggeffects) # model predictions\nlibrary(here) # project-relative file path\n\n# load-in data\ndf_phon &lt;- read_csv(here(\"data\", \"phoneme_tidy_data.csv\"))\n\n# Explore data ###\n\n\nbegins with some meta-information about the document, including its purpose\n\naids in knowing which scripts to run in which sequence\n\n\nthere are three hashtags after some headings (###)\n\nthis is helpful because it structures the outline of the document in RStudio\n\n\nthe purpose of chunks of code are written above\n\ndescription of specific lines of code are also given"
  },
  {
    "objectID": "slides/day3/repro_code_slides.html#structure-your-reports",
    "href": "slides/day3/repro_code_slides.html#structure-your-reports",
    "title": "Writing Reproducible Code",
    "section": "Structure your reports",
    "text": "Structure your reports\n\ndescribe the function/purpose at the beginning\n\ndocument your train of thought and findings throughout the script\n\ne.g., why are you producing this plot, what does it tell you?\n\n\ngive an overview of the findings/end result at the end\n\nit’s wise to avoid very long, multi-purpose scripts\n\nrule of thumb: one script per product or purpose\ne.g., data cleaning, exploration, analysis, publiation figures, etc."
  },
  {
    "objectID": "slides/day3/repro_code_slides.html#session-information",
    "href": "slides/day3/repro_code_slides.html#session-information",
    "title": "Writing Reproducible Code",
    "section": "Session Information",
    "text": "Session Information\n\nR and R package versions are both open source, and are frequently updated\n\nyou might’ve run your code using dplyr version 1.1.0 or later, which introduced the .by per-operation grouping argument\nwhat happens when somebody who has an older version of dplyr tries to run your code?\n\nThey won’t be able to!\n\n\nthe reverse of this situation is more common:\n\na newer version of a package no longer supports a deprecated function or argument"
  },
  {
    "objectID": "slides/day3/repro_code_slides.html#printing-session-info",
    "href": "slides/day3/repro_code_slides.html#printing-session-info",
    "title": "Writing Reproducible Code",
    "section": "Printing session info",
    "text": "Printing session info\n\nso, print your session info at the end of every script:\n\n\nsessionInfo()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Code",
    "crumbs": [
      "D. Palleschi",
      "Workshop overview"
    ]
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "",
    "section": "Schedule",
    "text": "Schedule\nTable 1 shows the tentative plan for the workshop and may be adjusted based on the needs of the participants.\n\n\n\n\nTable 1: Tentative schedule for the 4-day workshop\n\n\n\n\n\n\n\n\n\n\nSession\nTopic(s)\n\n\n\n\nDay 1\nThe state of reproducibility in linguistic research\n\n\nDay 2\n(i) Setting up a reproducible project-oriented workflow  (ii) Implementing literate and modular analyses\n\n\nDay 3\nPutting it into practice\n\n\nDay 4\n(i) Publishing analyses (ii) Conducting peer code review",
    "crumbs": [
      "D. Palleschi",
      "Workshop overview"
    ]
  },
  {
    "objectID": "index.html#workshop-goals",
    "href": "index.html#workshop-goals",
    "title": "",
    "section": "Workshop goals",
    "text": "Workshop goals\nWe will discuss and implement the following:\n\nreproducibility rates in linguistics\nproject-oriented workflow in R\n\nwith RProjects\nfolder structure\nnaming conventions\nusing project-relative filepaths with the here package\n\nliterate programming\n\nwriting linear code\nmodular analyses\ndynamic reports with Quarto\n\nsharing and checking our code\n\nuploading code to an OSF repository\nconducting a code review\n\n\nWhat we will NOT cover:\n\nversion control (e.g., git/GitHub)\nlearning R/the RStudio environment\nhow to appropriately analyse data (e.g., which analyses to use, etc.)\nhow to produce tables and figures\nhow to write a manuscript in Rmarkdown\n\nWhat we might cover if there’s interest and time:\n\nproject-relative package management with the renv package",
    "crumbs": [
      "D. Palleschi",
      "Workshop overview"
    ]
  },
  {
    "objectID": "index.html#how-to-navigate-this-website",
    "href": "index.html#how-to-navigate-this-website",
    "title": "",
    "section": "How to navigate this website",
    "text": "How to navigate this website\nEach topic is listed in the sidebar in chronological order. Three output formats are available, all with the same content:\n\nHTML page\nPDF of content (sub-optimally formatted)\nRevealJS slides\n\nThe contents were formatted for the slide output. Tables and figures may be too large/small in HTML and PDF format (especially the latter). Each page of the website presents the HTML format. The other 2 formats can be viewed by clicking on their symbol under ‘Other Formats’ (right sidebar).",
    "crumbs": [
      "D. Palleschi",
      "Workshop overview"
    ]
  },
  {
    "objectID": "index.html#software-before-day-1",
    "href": "index.html#software-before-day-1",
    "title": "",
    "section": "Software (before Day 1)",
    "text": "Software (before Day 1)\n\nInstall or update R\n\nN.B., I am currently using version 4.4.0 (Puppy Cup, 2024-04-24), although there is a newer version 4.4.1 (Race for Your Life, 2024-06-14)\nhaving an R version from 2022.07 or later should suffice\nDisclaimer: updating R can interfere with on-going R projects you are currently working on, most notably because you will need to re-install packages (and thus you may be installing more recent package versions which may break existing code). If you are currently in the middle of analysing some data, you may not want to update R right now. In this case, just make note of which version you’re currently running (e.g., by running R.version in the Console)\n\nInstall or update RStudio\n\nI am currently using RStudio version 2023.12.1+402, as I encountered issues when updating to 2024.04.2+764 in April when it was released. As a rule of thumb, I update R and/or RStudio a few months after their initial release, and when I know I have time to fix any bugs that might pop up (i.e., I don’t have a looming deadline)\n\n\nTo check which version of R you currently have, run the command R.version$version.string in the Console (to print just the version name and release date), or R.version$nickname (to print the nickname).\n\n\n\nIn the Console: print R version and release date\n\nR.version$version.string\n\n\n[1] \"R version 4.4.0 (2024-04-24)\"\n\n\n\n\n\nIn the Console: print R version nickname\n\nR.version$nickname\n\n\n[1] \"Puppy Cup\"\n\n\nTo check which version of RStudio you currently have, go to Help &gt; About RStudio in RStudio. You should see a pop-up like Figure 1.\n\n\n\n\n\n\n\n\nFigure 1: Help &gt; About RStudio",
    "crumbs": [
      "D. Palleschi",
      "Workshop overview"
    ]
  },
  {
    "objectID": "index.html#additional-steps-before-day-4",
    "href": "index.html#additional-steps-before-day-4",
    "title": "",
    "section": "Additional steps (before Day 4)",
    "text": "Additional steps (before Day 4)\nCreate an OSF account here if you don’t have one already.",
    "crumbs": [
      "D. Palleschi",
      "Workshop overview"
    ]
  },
  {
    "objectID": "slides/day4/code-review_slides.html#private-or-public",
    "href": "slides/day4/code-review_slides.html#private-or-public",
    "title": "Publishing analyses + Peer code review",
    "section": "Private or public",
    "text": "Private or public\n\nyou should notice near the top right corner a button ‘Make Public’\n\nthis tells you that your project is currently private\nthis means nobody can see it but you (or any collaborators you add)\n\n\ntypically you would make a repository public when it has been accepted for publication, or if you publish a pre-print\n\nyou can also make it public before this, but this is something to discuss with your collaborators"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#contributors",
    "href": "slides/day4/code-review_slides.html#contributors",
    "title": "Publishing analyses + Peer code review",
    "section": "Contributors",
    "text": "Contributors\n\nrepository contributors are typically co-authors or collaborators for a project\nclick on the ‘Contributors’ tab (top right of the screen)\n\nclick on ‘+ Add’, find my account, and add me as a collaborator with ‘Read’ rights\nmake sure the ‘Bibliographic Contributor’ button is checked\nthis just means that I will be included as bibliographic author if this repo is ever cited\n\n\ngo back to the project page, do you see any changes?"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#adding-files",
    "href": "slides/day4/code-review_slides.html#adding-files",
    "title": "Publishing analyses + Peer code review",
    "section": "Adding files",
    "text": "Adding files\n\nour purpose for creating an OSF project was to share our data and materials\n\nto do this, we navigate to the ‘Files’ tab\n\n\nrather unfortunately, we can only upload files (i.e., not entire folders)\n\nthis has the benefit of meaning our folder structure must be intentional\n\nbut the drawback that it’s quite tedious if you want to share a large project\n\n\nlet’s start by adding our data and scripts\n\nadd a folder called data\n\nand another folder called scripts or code, or whatever you prefer"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#adding-data",
    "href": "slides/day4/code-review_slides.html#adding-data",
    "title": "Publishing analyses + Peer code review",
    "section": "Adding data",
    "text": "Adding data\n\nunder data, add the three csv files you presumably have in the same folder in your project (drag and drop them, or select the big green +)\n\ndata_lifetime_pilot.csv\ntidy_data_lifetime_pilot.csv\ntidy_data_lifetime_pilot_dictionary.csv"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#adding-scripts",
    "href": "slides/day4/code-review_slides.html#adding-scripts",
    "title": "Publishing analyses + Peer code review",
    "section": "Adding scripts",
    "text": "Adding scripts\n\nunder the scripts folder add the scripts where we worked with the data:\n\nour wrangling script\nour tables script\nour data visualisation script"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#section",
    "href": "slides/day4/code-review_slides.html#section",
    "title": "Publishing analyses + Peer code review",
    "section": "",
    "text": "Checklist: Share data and code\n\n\n\nAt this point, your OSF project should\n\nbe private (this is the default for a new project)\nhave me as a collaborator\ncontain the folders data/ and scripts/\n\nwhich in turn contain the 3 CSV files and 3 Quarto scripts\nideally scripts/ will also contain the 3 PDF script outputs"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#download-osf-repo",
    "href": "slides/day4/code-review_slides.html#download-osf-repo",
    "title": "Publishing analyses + Peer code review",
    "section": "Download OSF repo",
    "text": "Download OSF repo\n\nlet’s start by downloading our OSF repo\n\nfrom the project overview page, go to the ‘Files’ pane\nclick on ‘OSF Storage (Germany - Frankfurt)’\nClick ‘Download as zip’ button and store somewhere useful/rename as needed\n\n\n\n\n\nFigure 2: How to download an OSF repo"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#reproduce-your-analyses",
    "href": "slides/day4/code-review_slides.html#reproduce-your-analyses",
    "title": "Publishing analyses + Peer code review",
    "section": "Reproduce your analyses",
    "text": "Reproduce your analyses\n\nfirst, close all R projects you currently have open\n\nthis is because RStudio might try to open your downloaded scripts in an already open RProject, which we don’t want\n\n\nnow, navigate to the zip you just downloaded and decompress it (double-click)\n\nselect a Quarto script from scripts/\n\ntry to run the script, does it run?\nprobably not…let’s discuss why"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#improving-code-reproducibility",
    "href": "slides/day4/code-review_slides.html#improving-code-reproducibility",
    "title": "Publishing analyses + Peer code review",
    "section": "Improving code reproducibility",
    "text": "Improving code reproducibility\n\nwhat structural dependecies do our scripts have?\n\ne.g., filepaths and folder names\n\n\nconsider, for example, how we accessed the data from our scripts\n\ndid we use setwd()?\ndid we use filepaths?\nno, we used the here() package within an R project\nthis meant we used our project root directory as our working directory\n\n\nso, we should, at minimum, also include the .Rproj file at the project root directory"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#packages",
    "href": "slides/day4/code-review_slides.html#packages",
    "title": "Publishing analyses + Peer code review",
    "section": "Packages",
    "text": "Packages\n\nincluded the .Rproj file won’t mean that the person who downloads it will also have our packages\n\ne.g., they might not have the here package, and won’t even be able to use our code to load in the data\n\n\nas we discussed some weeks ago, this is what the renv package does\n\nwe created project library, i.e., a lockfile (renv.lock) which is a project"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#section-1",
    "href": "slides/day4/code-review_slides.html#section-1",
    "title": "Publishing analyses + Peer code review",
    "section": "",
    "text": "Checklist: Share renv.lock\n\n\nAdd the renv.lock file to your OSF project repo (in the project root directory)."
  },
  {
    "objectID": "slides/day4/code-review_slides.html#auto-loaders",
    "href": "slides/day4/code-review_slides.html#auto-loaders",
    "title": "Publishing analyses + Peer code review",
    "section": "Auto-loaders",
    "text": "Auto-loaders\n\nwe also need to include our .Rprofile file\n\nthis is our auto-loader\nwhenever we open the R project, this file will be run\n\n\nit currently contains just source(\"renv/activate.R\")\n\nthis means: when you open the R project, run the renv/activate.R file\n\n\nso, we need to include our renv/activate.R file in our OSF repo\n\nincluding these two will automatically install the relevant version of renv"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#section-2",
    "href": "slides/day4/code-review_slides.html#section-2",
    "title": "Publishing analyses + Peer code review",
    "section": "",
    "text": ".Rprofile in Finder\n\n\nSome files are usually invisible on a Mac, such as those that start with dot (like .Rprofile). This makes it difficult to simply drag and drop the .Rprofile file to the OSF. To make such files viewable in Finder, navigate to the relevant project folder and use the keyboard shortcut Ctrl + Shift + Dot. These files will then appear greyed out.\n\n\n\n\nFigure 3: Use the shortcut Ctrl + Shift + Dot to view hidden files on a Mac"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#readme",
    "href": "slides/day4/code-review_slides.html#readme",
    "title": "Publishing analyses + Peer code review",
    "section": "README",
    "text": "README\n\nremember to update your README accordingly!\n\nthis can be updated as you add more to your project\n\n\nthe project README.md will ideally have information that is useful once the project is downloaded in its entirety\n\ne.g., brief info about the project/data\ndescription of the folder/file structure\nany info required for reproducibility\n\n\ne.g., anybody who downloads the project will need to run renv::restore() to restore your project library (but this will only work if they’re using the same R version!)\n\nso be sure to include that info!"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#reamde-renv-explanation",
    "href": "slides/day4/code-review_slides.html#reamde-renv-explanation",
    "title": "Publishing analyses + Peer code review",
    "section": "REAMDE renv explanation",
    "text": "REAMDE renv explanation\nFor example, you could add something like this:\n\n**Reproduce analyses**: Once you open this project, `renv` will automatically be installed. After this is complete, you please run `renv::restore()` to restore the project package library. This will not affect the package versions you have already installed globally on your machine."
  },
  {
    "objectID": "slides/day4/code-review_slides.html#section-3",
    "href": "slides/day4/code-review_slides.html#section-3",
    "title": "Publishing analyses + Peer code review",
    "section": "",
    "text": "Checklist: Share .Rprofile and renv/activate.R\n\n\n\nYour project should now have\n\n\n.Rprofile in the project root directory\n\nrenv/activate.R in the project root directory\n\ni.e., a folder renv/ in the root directory\nand the activate.R file in this renv/ folder\n\n\na README.md file in the root directory"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#osf-repo-structure",
    "href": "slides/day4/code-review_slides.html#osf-repo-structure",
    "title": "Publishing analyses + Peer code review",
    "section": "OSF repo structure",
    "text": "OSF repo structure\n\n\nFigure 4: Your OSF should now look like this"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#sharing-your-project",
    "href": "slides/day4/code-review_slides.html#sharing-your-project",
    "title": "Publishing analyses + Peer code review",
    "section": "Sharing your project",
    "text": "Sharing your project\n\nwe need to share our project with others\n\nyour project is still private\nso you need to produce a link because the URL won’t work for non-contributors\n\n\nproduce a View-only link\n\nyou can do this in Settings (top right)\ngive an informative name (so you remember why you created this link)\n\n\nif you select Anonymize, your name will be removed from the project\n\nthis is useful for e.g., blind peer review\nbut will not remove your name from your scripts!"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#swapping-project-urls",
    "href": "slides/day4/code-review_slides.html#swapping-project-urls",
    "title": "Publishing analyses + Peer code review",
    "section": "Swapping project URLs",
    "text": "Swapping project URLs\n\ngo to Moodle and add your OSF repo URL\ngo to someone else’s OSF repo and download their project\n\ninspect the project metafiles (e.g., README)\ntry to reproduce the analyses, can you?"
  },
  {
    "objectID": "slides/day4/code-review_slides.html#section-4",
    "href": "slides/day4/code-review_slides.html#section-4",
    "title": "Publishing analyses + Peer code review",
    "section": "",
    "text": "Anonymising your scripts (optional)\n\n\n\nIf you have a relatively large project with your name at the beginning of multiple scripts, it can be tedious to manually remove it. And you might not be sure you actually took your name out of everything!\nThis can be used using RStudio’s Global Find:\n\npress Cmd+Shift+F\n\nin the pop-up, choose your filepath (for me: the OSF folder only) and hit enter\nthen toggle to ‘Replace’ when a tab pops up next to the Terminal\ntype in your replacement (e.g., [Anonymized for peer review]), and hit “Replace All”\n\nImportant: this will work for HTML and R/Quarto/Rmd scripts, but not for PDFs! so you might want to re-render all PDFs. As far as I can tell you have to re-render each PDF. If you’re working in a Quarto project (and not an .Rproj), then you can use quarto render subfoldername --to pdf in the Terminal to re-render only the OSF PDFs. We didn’t discuss Quarto projects in this course, however.\nAfter the manuscript is accepted, you can then reverse this step: use the Global Find to replace [Anonymized for peer review] with your name! This is why I suggest surrounding the phrase with [], it ensures you don’t accidentally replace the string ‘anonymized for peer review’ elsewhere in your files (e.g., maybe you wrote in some analysis plan “all scripts will be anonymized for peer review”, which would then be changed to “all scripts will be Daniela Palleschi” if I had replaced Anonymized for peer review with my name)."
  },
  {
    "objectID": "slides/day4/osf-code_review.html",
    "href": "slides/day4/osf-code_review.html",
    "title": "Publishing analyses + Peer code review",
    "section": "",
    "text": "Today we will…\n\nset-up our first OSF project\nshare necessary files to make our OSF project reproducible\nconduct a code review of our own project\nconduct a peer code review"
  },
  {
    "objectID": "slides/day4/osf-code_review.html#private-or-public",
    "href": "slides/day4/osf-code_review.html#private-or-public",
    "title": "Publishing analyses + Peer code review",
    "section": "3.1 Private or public",
    "text": "3.1 Private or public\n\nyou should notice near the top right corner a button ‘Make Public’\n\nthis tells you that your project is currently private\nthis means nobody can see it but you (or any collaborators you add)\n\ntypically you would make a repository public when it has been accepted for publication, or if you publish a pre-print\n\nyou can also make it public before this, but this is something to discuss with your collaborators"
  },
  {
    "objectID": "slides/day4/osf-code_review.html#contributors",
    "href": "slides/day4/osf-code_review.html#contributors",
    "title": "Publishing analyses + Peer code review",
    "section": "3.2 Contributors",
    "text": "3.2 Contributors\n\nrepository contributors are typically co-authors or collaborators for a project\nclick on the ‘Contributors’ tab (top right of the screen)\n\nclick on ‘+ Add’, find my account, and add me as a collaborator with ‘Read’ rights\nmake sure the ‘Bibliographic Contributor’ button is checked\nthis just means that I will be included as bibliographic author if this repo is ever cited\n\ngo back to the project page, do you see any changes?"
  },
  {
    "objectID": "slides/day4/osf-code_review.html#adding-files",
    "href": "slides/day4/osf-code_review.html#adding-files",
    "title": "Publishing analyses + Peer code review",
    "section": "3.3 Adding files",
    "text": "3.3 Adding files\n\nour purpose for creating an OSF project was to share our data and materials\n\nto do this, we navigate to the ‘Files’ tab\n\nrather unfortunately, we can only upload files (i.e., not entire folders)\n\nthis has the benefit of meaning our folder structure must be intentional\nbut the drawback that it’s quite tedious if you want to share a large project\n\nlet’s start by adding our data and scripts\n\nadd a folder called data\nand another folder called scripts or code, or whatever you prefer"
  },
  {
    "objectID": "slides/day4/osf-code_review.html#adding-data",
    "href": "slides/day4/osf-code_review.html#adding-data",
    "title": "Publishing analyses + Peer code review",
    "section": "3.4 Adding data",
    "text": "3.4 Adding data\n\nunder data, add the three csv files you presumably have in the same folder in your project (drag and drop them, or select the big green +)\n\ndata_lifetime_pilot.csv\ntidy_data_lifetime_pilot.csv\ntidy_data_lifetime_pilot_dictionary.csv"
  },
  {
    "objectID": "slides/day4/osf-code_review.html#adding-scripts",
    "href": "slides/day4/osf-code_review.html#adding-scripts",
    "title": "Publishing analyses + Peer code review",
    "section": "3.5 Adding scripts",
    "text": "3.5 Adding scripts\n\nunder the scripts folder add the scripts where we worked with the data:\n\nour wrangling script\nour tables script\nour data visualisation script\n\n\n\n3.5.1 Adding PDF output\n\noptionally, you can also upload the PDF output produced by each script\n\nthis means that anybody viewing your project doesn’t have to download the Quarto scripts to see what was done (as they aren’t viewable in-browser)\n\n\n\n\n3.5.2 Structuring your scripts/ folder\n\nunlike the data folder, how you organise and name this folder on OSF is more flexible\n\nbecause we (likely) aren’t accessing these scripts from somewhere else in the project (unlike loading data from the data folder)\n\nyou can include them in sub-folders if you prefer\n\nthe structure of this folder is organisational, and not fundamental to reproducibility\nmore organised folders make it easier to navigate for someone not familiar with the project structure\nkeeping this structure identical to your actual project structure is also ideal for on-going larger projects, but it’s up to you\n\n\n\n\n\n\n\n\nChecklist: Share data and code\n\n\n\n\nAt this point, your OSF project should\n\nbe private (this is the default for a new project)\nhave me as a collaborator\ncontain the folders data/ and scripts/\n\nwhich in turn contain the 3 CSV files and 3 Quarto scripts\nideally scripts/ will also contain the 3 PDF script outputs"
  },
  {
    "objectID": "slides/day4/osf-code_review.html#download-osf-repo",
    "href": "slides/day4/osf-code_review.html#download-osf-repo",
    "title": "Publishing analyses + Peer code review",
    "section": "4.1 Download OSF repo",
    "text": "4.1 Download OSF repo\n\nlet’s start by downloading our OSF repo\n\nfrom the project overview page, go to the ‘Files’ pane\nclick on ‘OSF Storage (Germany - Frankfurt)’\nClick ‘Download as zip’ button and store somewhere useful/rename as needed\n\n\n\n\n\n\n\n\n\n\nFigure 2: How to download an OSF repo"
  },
  {
    "objectID": "slides/day4/osf-code_review.html#reproduce-your-analyses",
    "href": "slides/day4/osf-code_review.html#reproduce-your-analyses",
    "title": "Publishing analyses + Peer code review",
    "section": "4.2 Reproduce your analyses",
    "text": "4.2 Reproduce your analyses\n\nfirst, close all R projects you currently have open\n\nthis is because RStudio might try to open your downloaded scripts in an already open RProject, which we don’t want\n\nnow, navigate to the zip you just downloaded and decompress it (double-click)\n\nselect a Quarto script from scripts/\ntry to run the script, does it run?\nprobably not…let’s discuss why"
  },
  {
    "objectID": "slides/day4/osf-code_review.html#improving-code-reproducibility",
    "href": "slides/day4/osf-code_review.html#improving-code-reproducibility",
    "title": "Publishing analyses + Peer code review",
    "section": "5.1 Improving code reproducibility",
    "text": "5.1 Improving code reproducibility\n\nwhat structural dependecies do our scripts have?\n\ne.g., filepaths and folder names\n\nconsider, for example, how we accessed the data from our scripts\n\ndid we use setwd()?\ndid we use filepaths?\nno, we used the here() package within an R project\nthis meant we used our project root directory as our working directory\n\nso, we should, at minimum, also include the .Rproj file at the project root directory"
  },
  {
    "objectID": "slides/day4/osf-code_review.html#packages",
    "href": "slides/day4/osf-code_review.html#packages",
    "title": "Publishing analyses + Peer code review",
    "section": "5.2 Packages",
    "text": "5.2 Packages\n\nincluded the .Rproj file won’t mean that the person who downloads it will also have our packages\n\ne.g., they might not have the here package, and won’t even be able to use our code to load in the data\n\nas we discussed some weeks ago, this is what the renv package does\n\nwe created project library, i.e., a lockfile (renv.lock) which is a project\n\n\n\n\n\n\n\n\nChecklist: Share renv.lock\n\n\n\nAdd the renv.lock file to your OSF project repo (in the project root directory)."
  },
  {
    "objectID": "slides/day4/osf-code_review.html#auto-loaders",
    "href": "slides/day4/osf-code_review.html#auto-loaders",
    "title": "Publishing analyses + Peer code review",
    "section": "5.3 Auto-loaders",
    "text": "5.3 Auto-loaders\n\nwe also need to include our .Rprofile file\n\nthis is our auto-loader\nwhenever we open the R project, this file will be run\n\nit currently contains just source(\"renv/activate.R\")\n\nthis means: when you open the R project, run the renv/activate.R file\n\nso, we need to include our renv/activate.R file in our OSF repo\n\nincluding these two will automatically install the relevant version of renv\n\n\n\n\n\n\n\n\n.Rprofile in Finder\n\n\n\nSome files are usually invisible on a Mac, such as those that start with dot (like .Rprofile). This makes it difficult to simply drag and drop the .Rprofile file to the OSF. To make such files viewable in Finder, navigate to the relevant project folder and use the keyboard shortcut Ctrl + Shift + Dot. These files will then appear greyed out.\n\n\n\n\n\n\n\n\nFigure 3: Use the shortcut Ctrl + Shift + Dot to view hidden files on a Mac"
  },
  {
    "objectID": "slides/day4/osf-code_review.html#readme",
    "href": "slides/day4/osf-code_review.html#readme",
    "title": "Publishing analyses + Peer code review",
    "section": "5.4 README",
    "text": "5.4 README\n\nremember to update your README accordingly!\n\nthis can be updated as you add more to your project\n\nthe project README.md will ideally have information that is useful once the project is downloaded in its entirety\n\ne.g., brief info about the project/data\ndescription of the folder/file structure\nany info required for reproducibility\n\ne.g., anybody who downloads the project will need to run renv::restore() to restore your project library (but this will only work if they’re using the same R version!)\n\nso be sure to include that info!\n\n\nFor example, you could add something like this:\n\n**Reproduce analyses**: Once you open this project, `renv` will automatically be installed. After this is complete, you please run `renv::restore()` to restore the project package library. This will not affect the package versions you have already installed globally on your machine.\n\n\n\n\n\n\n\nChecklist: Share .Rprofile and renv/activate.R\n\n\n\n\nYour project should now have\n\n.Rprofile in the project root directory\nrenv/activate.R in the project root directory\n\ni.e., a folder renv/ in the root directory\nand the activate.R file in this renv/ folder\n\na README.md file in the root directory"
  },
  {
    "objectID": "slides/day4/osf-code_review.html#osf-repo-structure",
    "href": "slides/day4/osf-code_review.html#osf-repo-structure",
    "title": "Publishing analyses + Peer code review",
    "section": "5.5 OSF repo structure",
    "text": "5.5 OSF repo structure\n\nyour OSF project should look something like Figure 4\n\nN.B., there are more files under scripts/\n\n\n\n\n\n\n\n\n\n\nFigure 4: Your OSF should now look like this"
  },
  {
    "objectID": "slides/day4/osf-code_review.html#sharing-your-project",
    "href": "slides/day4/osf-code_review.html#sharing-your-project",
    "title": "Publishing analyses + Peer code review",
    "section": "6.1 Sharing your project",
    "text": "6.1 Sharing your project\n\nwe need to share our project with others\n\nyour project is still private\nso you need to produce a link because the URL won’t work for non-contributors\n\nproduce a View-only link\n\nyou can do this in Settings (top right)\ngive an informative name (so you remember why you created this link)\n\nif you select Anonymize, your name will be removed from the project\n\nthis is useful for e.g., blind peer review\nbut will not remove your name from your scripts!"
  },
  {
    "objectID": "slides/day4/osf-code_review.html#swapping-project-urls",
    "href": "slides/day4/osf-code_review.html#swapping-project-urls",
    "title": "Publishing analyses + Peer code review",
    "section": "6.2 Swapping project URLs",
    "text": "6.2 Swapping project URLs\n\ngo to Moodle and add your OSF repo URL\ngo to someone else’s OSF repo and download their project\n\ninspect the project metafiles (e.g., README)\ntry to reproduce the analyses, can you?\n\n\n\n\n\n\n\n\nAnonymising your scripts (optional)\n\n\n\n\nIf you have a relatively large project with your name at the beginning of multiple scripts, it can be tedious to manually remove it. And you might not be sure you actually took your name out of everything!\nThis can be used using RStudio’s Global Find:\n\npress Cmd+Shift+F\nin the pop-up, choose your filepath (for me: the OSF folder only) and hit enter\nthen toggle to ‘Replace’ when a tab pops up next to the Terminal\ntype in your replacement (e.g., [Anonymized for peer review]), and hit “Replace All”\n\nImportant: this will work for HTML and R/Quarto/Rmd scripts, but not for PDFs! so you might want to re-render all PDFs. As far as I can tell you have to re-render each PDF. If you’re working in a Quarto project (and not an .Rproj), then you can use quarto render subfoldername --to pdf in the Terminal to re-render only the OSF PDFs. We didn’t discuss Quarto projects in this course, however.\nAfter the manuscript is accepted, you can then reverse this step: use the Global Find to replace [Anonymized for peer review] with your name! This is why I suggest surrounding the phrase with [], it ensures you don’t accidentally replace the string ‘anonymized for peer review’ elsewhere in your files (e.g., maybe you wrote in some analysis plan “all scripts will be anonymized for peer review”, which would then be changed to “all scripts will be Daniela Palleschi” if I had replaced Anonymized for peer review with my name)."
  },
  {
    "objectID": "slides/day2/rprojects_slides.html#folder-structure",
    "href": "slides/day2/rprojects_slides.html#folder-structure",
    "title": "RProjects",
    "section": "Folder structure",
    "text": "Folder structure\n\na core computer literacy skill\n\nkeep your Desktop as empty as possible\nhave a sensible folder structure\navoid mixing subfolders and files\n\ni.e., if a folder contains subfolders, ideally it should not contain files"
  },
  {
    "objectID": "slides/day2/rprojects_slides.html#creating-a-new-project",
    "href": "slides/day2/rprojects_slides.html#creating-a-new-project",
    "title": "RProjects",
    "section": "Creating a new Project",
    "text": "Creating a new Project\n\nwhen?\n\nwhenever you’re starting a new course or project which will use R\n\n\nwhy?\n\nto keep all the relavent materials in one place\n\n\nwhere?\n\nsomewhere that makes sense, e.g., a folder called SoSe2024 or Mastersarbeit\n\n\n\nhow?\n\nFile &gt; New Project &gt; New Directory &gt; New Project &gt; [Directory name] &gt; Create Project"
  },
  {
    "objectID": "slides/day2/rprojects_slides.html#opening-a-project",
    "href": "slides/day2/rprojects_slides.html#opening-a-project",
    "title": "RProjects",
    "section": "Opening a Project",
    "text": "Opening a Project\n\nto open a project, locate its .Rproj file and double-click\nor if you’re already in RStudio, you can use the Project (None) drop-down (top right)\n\n\n\n\n\n\n\nFigure 1: Double-click .Rproj\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2: Open from RStudio"
  },
  {
    "objectID": "slides/day2/rprojects_slides.html#global-rstudio-options",
    "href": "slides/day2/rprojects_slides.html#global-rstudio-options",
    "title": "RProjects",
    "section": "Global RStudio options",
    "text": "Global RStudio options\n\n\n\n\n\n\nFigure 3: RStudio settings for reproducibility\n\n\n\n\n\n\n\n\n\n\nTools &gt; Global Options\n\n\nWorkspace: Restore .RData into workspace at startup: NO\nSave workspace to .RData on exit: Never\n\n\nthis will ensure that you are always starting with a clean slate\n\nand that your code is not dependent on some pacakge or object you created in another session\n\n\nthis is also how RMarkdown and Quarto scripts run\n\nthey start with an empty environment and run the script linearly"
  },
  {
    "objectID": "slides/day2/rprojects_slides.html#section-1",
    "href": "slides/day2/rprojects_slides.html#section-1",
    "title": "RProjects",
    "section": "",
    "text": "Global settings\n\n\nChange your Global Options so that\n\n\nWorkspace: Restore .RData into workspace at startup: NO\nSave workspace to .RData on exit: Never"
  },
  {
    "objectID": "slides/day2/rprojects_slides.html#spot-the-differences",
    "href": "slides/day2/rprojects_slides.html#spot-the-differences",
    "title": "RProjects",
    "section": "Spot the differences",
    "text": "Spot the differences\n\n\n\n\n\n\nFigure 4: RStudio Session A\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 5: RStudio Session B"
  },
  {
    "objectID": "slides/day2/rprojects_slides.html#spot-the-differences-rproject-vs.-none",
    "href": "slides/day2/rprojects_slides.html#spot-the-differences-rproject-vs.-none",
    "title": "RProjects",
    "section": "Spot the differences: RProject vs. None",
    "text": "Spot the differences: RProject vs. None"
  },
  {
    "objectID": "slides/day2/rprojects_slides.html#folder-structure-1",
    "href": "slides/day2/rprojects_slides.html#folder-structure-1",
    "title": "RProjects",
    "section": "Folder structure",
    "text": "Folder structure\n\nsome folders you’ll typically want to have:\n\n\ndata: containing your dataset(s)\n\nscripts (or analyses, etc.): containing any analysis scripts\n\nmanuscript: containing any write-ups of your results\n\nmaterials: containing relevant experiment materials (e.g., stimuli)\n\n\nlet’s just create the first 2 (data and scripts)"
  },
  {
    "objectID": "slides/day2/rprojects_slides.html#the-problem-with-setwd",
    "href": "slides/day2/rprojects_slides.html#the-problem-with-setwd",
    "title": "RProjects",
    "section": "The problem with setwd()\n",
    "text": "The problem with setwd()\n\n\nIf the first line of your R script is\nsetwd(\"C:\\Users\\jenny\\path\\that\\only\\I\\have\")\nI will come into your office and SET YOUR COMPUTER ON FIRE🔥.\n\n— Jenny Bryan\n\n\nsetwd() depends on your entire machine’s folder structure\n\nsetwd() breaks when you\n\nsend your project folder to a collaborator\nmake your analyses open\nchange the location of your project folder\n\n\nusing slashes is also dependent on your operating system"
  },
  {
    "objectID": "slides/day2/rprojects_slides.html#the-benefit-of-here",
    "href": "slides/day2/rprojects_slides.html#the-benefit-of-here",
    "title": "RProjects",
    "section": "The benefit of here()\n",
    "text": "The benefit of here()\n\n\nuses the top-level directory of your project as the working directory\ncan separate folder names with a comma"
  },
  {
    "objectID": "slides/day2/rprojects_slides.html#section-3",
    "href": "slides/day2/rprojects_slides.html#section-3",
    "title": "RProjects",
    "section": "",
    "text": "here\n\n\nLoad the dataset using here\n\nInstall here (e.g., install.packages(\"here\"))\nLoad here at the beginning of your package\n\nor use here:: before calling a function\n\n\nUse the here() function to load in your data\nInspect the dataset however you usually would (e.g., summary(), names(), etc.)\nSave your script"
  },
  {
    "objectID": "slides/day2/rprojects_slides.html#herehere",
    "href": "slides/day2/rprojects_slides.html#herehere",
    "title": "RProjects",
    "section": "here::here()",
    "text": "here::here()\n\ninstall package\n\n\n\n\nIn the Console\n\ninstall.packages(\"here\")\n\n\n\nload package and call the here function\n\n\n# load package\nlibrary(here)\n\n# read in data\ndf_data &lt;- read.csv(here(\"data\", \"data_lifetime_pilot.csv\"))\n\n\nor directly call the here function without loading the package\n\n\n# read in data without loading here\ndf_data &lt;- read.csv(here::here(\"data\", \"data_lifetime_pilot.csv\"))"
  },
  {
    "objectID": "slides/day2/rprojects_slides.html#section-4",
    "href": "slides/day2/rprojects_slides.html#section-4",
    "title": "RProjects",
    "section": "",
    "text": "Reproduce your analysis\n\n\n\nMake sure you save your script, then close your Rproject.\nRe-open the project. Can you re-run the script?"
  },
  {
    "objectID": "slides/day2/rprojects.html",
    "href": "slides/day2/rprojects.html",
    "title": "RProjects",
    "section": "",
    "text": "Today we will…\n\nlearn about project-oriented workflows\ncreate an RProject\nuse project-relative filepaths with the here package"
  },
  {
    "objectID": "slides/day2/rprojects.html#folder-structure",
    "href": "slides/day2/rprojects.html#folder-structure",
    "title": "RProjects",
    "section": "Folder structure",
    "text": "Folder structure\n\na core computer literacy skill\n\nkeep your Desktop as empty as possible\nhave a sensible folder structure\navoid mixing subfolders and files\n\ni.e., if a folder contains subfolders, ideally it should not contain files"
  },
  {
    "objectID": "slides/day2/rprojects.html#creating-a-new-project",
    "href": "slides/day2/rprojects.html#creating-a-new-project",
    "title": "RProjects",
    "section": "Creating a new Project",
    "text": "Creating a new Project\n\nwhen?\n\nwhenever you’re starting a new course or project which will use R\n\nwhy?\n\nto keep all the relavent materials in one place\n\nwhere?\n\nsomewhere that makes sense, e.g., a folder called SoSe2024 or Mastersarbeit\n\nhow?\n\nFile &gt; New Project &gt; New Directory &gt; New Project &gt; [Directory name] &gt; Create Project\n\n\n\n\n\n\n\n\n\n\nNew RProject\n\n\n\nCreate a new RProject for this workshop\n\nFile &gt; New Project &gt; New Directory &gt; New Project &gt; [Directory name] &gt; Create Project\nmake sure you choose a sensible location"
  },
  {
    "objectID": "slides/day2/rprojects.html#opening-a-project",
    "href": "slides/day2/rprojects.html#opening-a-project",
    "title": "RProjects",
    "section": "Opening a Project",
    "text": "Opening a Project\n\nto open a project, locate its .Rproj file and double-click\nor if you’re already in RStudio, you can use the Project (None) drop-down (top right)\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: Double-click .Rproj\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2: Open from RStudio"
  },
  {
    "objectID": "slides/day2/rprojects.html#global-rstudio-options",
    "href": "slides/day2/rprojects.html#global-rstudio-options",
    "title": "RProjects",
    "section": "Global RStudio options",
    "text": "Global RStudio options\n\n\n\n\n\n\n\n\n\n\nFigure 3: RStudio settings for reproducibility\n\n\n\n\n\n\n\nTools &gt; Global Options\n\nWorkspace: Restore .RData into workspace at startup: NO\nSave workspace to .RData on exit: Never\n\nthis will ensure that you are always starting with a clean slate\n\nand that your code is not dependent on some pacakge or object you created in another session\n\nthis is also how RMarkdown and Quarto scripts run\n\nthey start with an empty environment and run the script linearly"
  },
  {
    "objectID": "slides/day2/rprojects.html#section-1",
    "href": "slides/day2/rprojects.html#section-1",
    "title": "RProjects",
    "section": "",
    "text": "Global settings\n\n\n\nChange your Global Options so that\n\nWorkspace: Restore .RData into workspace at startup: NO\nSave workspace to .RData on exit: Never"
  },
  {
    "objectID": "slides/day2/rprojects.html#spot-the-differences",
    "href": "slides/day2/rprojects.html#spot-the-differences",
    "title": "RProjects",
    "section": "Spot the differences",
    "text": "Spot the differences\n\n\n\n\n\n\n\n\n\n\nFigure 4: RStudio Session A\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 5: RStudio Session B"
  },
  {
    "objectID": "slides/day2/rprojects.html#spot-the-differences-rproject-vs.-none",
    "href": "slides/day2/rprojects.html#spot-the-differences-rproject-vs.-none",
    "title": "RProjects",
    "section": "Spot the differences: RProject vs. None",
    "text": "Spot the differences: RProject vs. None"
  },
  {
    "objectID": "slides/day2/rprojects.html#folder-structure-1",
    "href": "slides/day2/rprojects.html#folder-structure-1",
    "title": "RProjects",
    "section": "Folder structure",
    "text": "Folder structure\n\nsome folders you’ll typically want to have:\n\ndata: containing your dataset(s)\nscripts (or analyses, etc.): containing any analysis scripts\nmanuscript: containing any write-ups of your results\nmaterials: containing relevant experiment materials (e.g., stimuli)\n\nlet’s just create the first 2 (data and scripts)\n\n\ndata/\n\ndo you have “raw”, i.e., pre-processed data?\n\nif so, you might want to create a raw sub-folder\nand any other relevant sub-folders (e.g., processed or tidy)\n\ndownload the dataset on this week’s Moodle section\n\nor, move a dataset of your own to this folder\n\n\n\n\nscripts/\n\ntry to create a single script for each “product”\n\ne.g., anonymised data, ‘cleaned’ data, data exploration, visualisation, analyses, etc.\n\nyou can create sub-folders as the project develops and move scripts around\n\nfor now, let’s create a new script to take a look at our data\n\n\n\n\n\n\n\n\n\n\n\nNew script\n\n\n\nCreate a new Quarto script:\n\nFile &gt; New File &gt; Quarto Document\nAdd a title\nUncheck the Use Visual Editor box\nClick Create\nSave it in your scripts/ folder: File &gt; Save as...\n\n\n\n\n\nLoad in the data\n\nload in the data however you normally would\n\ne.g., readr::read_csv()"
  },
  {
    "objectID": "slides/day2/rprojects.html#the-problem-with-setwd",
    "href": "slides/day2/rprojects.html#the-problem-with-setwd",
    "title": "RProjects",
    "section": "The problem with setwd()",
    "text": "The problem with setwd()\n\nIf the first line of your R script is\nsetwd(\"C:\\Users\\jenny\\path\\that\\only\\I\\have\")\nI will come into your office and SET YOUR COMPUTER ON FIRE🔥.\n\n— Jenny Bryan\n\nsetwd() depends on your entire machine’s folder structure\nsetwd() breaks when you\n\nsend your project folder to a collaborator\nmake your analyses open\nchange the location of your project folder\n\nusing slashes is also dependent on your operating system"
  },
  {
    "objectID": "slides/day2/rprojects.html#the-benefit-of-here",
    "href": "slides/day2/rprojects.html#the-benefit-of-here",
    "title": "RProjects",
    "section": "The benefit of here()",
    "text": "The benefit of here()\n\nuses the top-level directory of your project as the working directory\ncan separate folder names with a comma"
  },
  {
    "objectID": "slides/day2/rprojects.html#section-3",
    "href": "slides/day2/rprojects.html#section-3",
    "title": "RProjects",
    "section": "",
    "text": "here\n\n\n\nLoad the dataset using here\n\nInstall here (e.g., install.packages(\"here\"))\nLoad here at the beginning of your package\n\nor use here:: before calling a function\n\nUse the here() function to load in your data\nInspect the dataset however you usually would (e.g., summary(), names(), etc.)\nSave your script"
  },
  {
    "objectID": "slides/day2/rprojects.html#herehere",
    "href": "slides/day2/rprojects.html#herehere",
    "title": "RProjects",
    "section": "here::here()",
    "text": "here::here()\n\ninstall package\n\n\n\n\nIn the Console\n\ninstall.packages(\"here\")\n\n\n\nload package and call the here function\n\n\n# load package\nlibrary(here)\n\n# read in data\ndf_data &lt;- read.csv(here(\"data\", \"data_lifetime_pilot.csv\"))\n\n\nor directly call the here function without loading the package\n\n\n# read in data without loading here\ndf_data &lt;- read.csv(here::here(\"data\", \"data_lifetime_pilot.csv\"))"
  },
  {
    "objectID": "slides/day2/rprojects.html#section-4",
    "href": "slides/day2/rprojects.html#section-4",
    "title": "RProjects",
    "section": "",
    "text": "Reproduce your analysis\n\n\n\n\nMake sure you save your script, then close your Rproject.\nRe-open the project. Can you re-run the script?"
  },
  {
    "objectID": "slides/day1/reproducibility_slides.html#systemic-problem-in-science",
    "href": "slides/day1/reproducibility_slides.html#systemic-problem-in-science",
    "title": "Reproducibility in linguistic research and R",
    "section": "Systemic problem in science",
    "text": "Systemic problem in science\n\nthe combination of\n\npublication bias\n\njournals favour novel, significant findings\n\n\npublish or perish\n\nresearchers’ careers depend on publications\n\n\n\n\ncan/does/did lead to:\n\nHARKing\n\nHypothesising After Results are Known\n\n\np-hacking\n\n(re-)running analyses until a significant effect is found\n\n\nreplication crisis\n\npervasive failure to replicate previous research"
  },
  {
    "objectID": "slides/day1/reproducibility_slides.html#why-do-open-science",
    "href": "slides/day1/reproducibility_slides.html#why-do-open-science",
    "title": "Reproducibility in linguistic research and R",
    "section": "Why do Open Science?",
    "text": "Why do Open Science?\n\n\n\nopen science is good science\nit encourages organisation and planning\n\nhelpful for future you\n\n\nincreases transparency\n\nwithout transparency we cannot inspect evidence ourselves\nor ensure the claims match the evidence\n\n\nmakes our work more robust\n\nso future work stands on solid ground\n\n\nnot all-or-nothing\nthere are things I consider the bare minimum\n\ndetailed experiment plan, ideally public\nopenly available materials (e.g., stimuli)\nshare code and data\n\n\nthe important thing is to do what you can\n\nwhich Open Science research practices in Figure 1 are relevant related to reproducibility?\n\n\n\n\n\n\n\n\nFigure 1: Image source: Kathawalla et al. (2021) (all rights reserved)"
  },
  {
    "objectID": "slides/day1/reproducibility_slides.html#reproducibility-vs.-replication",
    "href": "slides/day1/reproducibility_slides.html#reproducibility-vs.-replication",
    "title": "Reproducibility in linguistic research and R",
    "section": "Reproducibility vs. replication",
    "text": "Reproducibility vs. replication\n\nthe two terms have been used interchangably in the past (e.g., in the title of Open Science Collaboration, 2015)\n\nwe’ll define them as follows (and this is becoming the standard distinction, imo)\n\n\n\n\n\nReproducibility\n\nre-analysing the same data using (ideally) the same scripts, software, etc\naim: produce the same results (means, model estimates, etc.)\nwhy: tests for errors, coding mistakes, biases, etc.\n\n\nReplication\n\nre-running a previous experiment, ideally with the same materials, set-up, etc.\nideally the same analysis workflow as the original study would also be used (i.e., like reproducing the analyses but with new data)\naim: test whether results are replicated with new data in terms of direction and magnitude\n\n\n\n\nin short:\n\nreproducibility = re-analyses of the same data\n\nreplication = collection of new data"
  },
  {
    "objectID": "slides/day1/reproducibility_slides.html#practice-fair-principles",
    "href": "slides/day1/reproducibility_slides.html#practice-fair-principles",
    "title": "Reproducibility in linguistic research and R",
    "section": "Practice FAIR principles",
    "text": "Practice FAIR principles\n\n\nguidelines for sharing digital resources\nrefers broadly to data, but we’ll consider it in terms of analyses\n\n\n\n\n\n\n\n\nFigure 2: Source: National Library of Medicine (all rights reserved)\n\n\n\n\n\n\n\n\n\nfindable and accesssible refer to where materials are stored\n\nin findable repositories\nthat are accessible, i.e., do not require an account\n\n\ninteroperable and reusable emphasise the format of data (and code)\n\nthe importance of future use\nand use beyond your precise computational environment"
  },
  {
    "objectID": "slides/day1/reproducibility_slides.html#code-review",
    "href": "slides/day1/reproducibility_slides.html#code-review",
    "title": "Reproducibility in linguistic research and R",
    "section": "Code review",
    "text": "Code review\n\na great way to test the FAIR principles\n\ncode review!\ni.e., have a colleague try to access your data/run your code\n\neither via an online repository\nor send them your project folder"
  },
  {
    "objectID": "slides/day1/reproducibility_slides.html#data-and-code-availability",
    "href": "slides/day1/reproducibility_slides.html#data-and-code-availability",
    "title": "Reproducibility in linguistic research and R",
    "section": "Data and code availability",
    "text": "Data and code availability\n\n\n\n“data available upon (reasonable) request”\n\ngenerally not true\n\n\ndata was not available in 68% of the most cited psychology studies (2006-2016) (Hardwicke & Ioannidis, 2018)\n\na further 18% were available with restrictions\nonly 11% available without restriction\n\n\ndata alone is not sufficient\n\n‘Data Analysis’ sections are rarely exhaustive/unambiguous\nvery difficult to re-create analyses without code\ne.g., is data trimming explicitly defined?\n\nthis will even affect descriptive statistics\n\n\n\n\n\n\n\n\n\n\nFigure 4: Source: Hardwicke & Ioannidis (2018), p. 6 (all rights reserved)"
  },
  {
    "objectID": "slides/day1/reproducibility_slides.html#share-the-code-not-just-the-data",
    "href": "slides/day1/reproducibility_slides.html#share-the-code-not-just-the-data",
    "title": "Reproducibility in linguistic research and R",
    "section": "Share the code, not just the data",
    "text": "Share the code, not just the data\n\nWhy?\n\nkey details are often missing from ‘Methods’ sections\n\n\nsuggestions for researchers from Laurinavichyute et al. (2022)\n\n\n\n\n\nShare data in usable form\n\nwith pre-processing code\n\n\nUse publicly accessible repositories\n\ne.g., OSF\n\n\nUse non-proprietary data formats\n\ne.g., not .xls files (Excel)\n\n\n\n\n\nProvide documentation\n\ne.g., README, data dictionaries\n\n\nShare code and data\n\nthey estimate a 38% increase in reproducibility\n\n\nTeach data management and computing skills\n\nthat’s what this course is for!"
  },
  {
    "objectID": "slides/day1/reproducibility_slides.html#data-and-code-neq-reproducibility",
    "href": "slides/day1/reproducibility_slides.html#data-and-code-neq-reproducibility",
    "title": "Reproducibility in linguistic research and R",
    "section": "Data and code \\(\\neq\\) Reproducibility",
    "text": "Data and code \\(\\neq\\) Reproducibility\n\neven including code does not guarantee reproducibility\naccess to data and code do not mean analyses are reproducible\nwhat can go wrong? Examples from Laurinavichyute et al. (2022)\n\n\n\n\nData problems\n\ninaccessible data\nincomplete data (e.g., 2/3 experiments)\n\n\nCode problems\n\nincomplete code\nerror messages\ncode rot: outdated syntax or environment\nproprietary software\n\n\n\n\n\nDocumentation problems\n\ndata difficult to interpret\nno README file/data dictionary\nunclear folder/file/variable naming convention\nmanuscript contradicts code\n\n\nUnclear terms of use\n\nno licence specification"
  },
  {
    "objectID": "slides/day1/reproducibility_slides.html#what-should-ideally-be-shared",
    "href": "slides/day1/reproducibility_slides.html#what-should-ideally-be-shared",
    "title": "Reproducibility in linguistic research and R",
    "section": "What should (ideally) be shared?",
    "text": "What should (ideally) be shared?\n\n\n\nmaterials\n\nprotocols\nstimuli\nexperiment set-up\n\n\ndocumentation\n\nREADME\nmetadata\n\n\n\n\n\ndata\n\nraw\n\ne.g., text files, audio, video, or images\n\n\nprocessed\n\n\nanalysis code\n\npre-processing\nanalyses\n\n\n\n\n\n\n\n\nmaterials are helpful for replication\n\nbut also for inspection of e.g., design\n\n\n\n\n\ndata and code are necessary for reproducibility\n\nalong with proper documentation of software used"
  },
  {
    "objectID": "slides/day1/reproducibility_slides.html#reproducibility-rates-in-linguistic-research",
    "href": "slides/day1/reproducibility_slides.html#reproducibility-rates-in-linguistic-research",
    "title": "Reproducibility in linguistic research and R",
    "section": "Reproducibility rates in linguistic research",
    "text": "Reproducibility rates in linguistic research\n\n\n\n\n\n\nFigure 5: Source: Bochynska et al. (2023), p. 11 (all rights reserved)\n\n\n\n\n\n\n\n\n\nmeta-analysis of 519 randomly sampled articles from various linguistic journales\n\npre- and post-reproducibility crisis (2008/9, 2018/19) (Bochynska et al., 2023)\n\ndifferentiated between primary (collected for study) and secondary (pre-existing) data\n\n\nreported a post-RC increase in shared materials, data, and analyses\n\nbut still low rates of each\n\n\nhigher rates of secondary data sharing, presumably due to publicly available corpora\ndata shared more often than analyses, pre- and post-RC"
  },
  {
    "objectID": "slides/day1/reproducibility_slides.html#journal-of-memory-and-language",
    "href": "slides/day1/reproducibility_slides.html#journal-of-memory-and-language",
    "title": "Reproducibility in linguistic research and R",
    "section": "Journal of Memory and Language",
    "text": "Journal of Memory and Language\n\nmeta-analysis of articles from JML (Laurinavichyute et al., 2022)\n\nbefore and after an Open Science Policy was introduced in 2019\n\n\n\n\n\nFigure 6: Source: Laurinavichyute et al. (2022), p. 5 (all rights reserved)\n\ncode and data availability improved\nbut reproducibility rate ranged from 34-56%, depending on criteria\nhigher rates compared to field-wide meta-analysis (Bochynska et al., 2023)"
  },
  {
    "objectID": "slides/day1/reproducibility.html",
    "href": "slides/day1/reproducibility.html",
    "title": "Reproducibility in linguistic research and R",
    "section": "",
    "text": "Today we will learn about…\n\nwhat ‘reproducibility’ is and why/how to practice it\nFAIR principles for sharing our code and data\nconcepts for building a reproducible workflow",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Reproducibility in linguistic research and R"
    ]
  },
  {
    "objectID": "slides/day1/reproducibility.html#systemic-problem-in-science",
    "href": "slides/day1/reproducibility.html#systemic-problem-in-science",
    "title": "Reproducibility in linguistic research and R",
    "section": "1.1 Systemic problem in science",
    "text": "1.1 Systemic problem in science\n\nthe combination of\n\npublication bias\n\njournals favour novel, significant findings\n\npublish or perish\n\nresearchers’ careers depend on publications\n\n\ncan/does/did lead to:\n\nHARKing\n\nHypothesising After Results are Known\n\np-hacking\n\n(re-)running analyses until a significant effect is found\n\nreplication crisis\n\npervasive failure to replicate previous research",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Reproducibility in linguistic research and R"
    ]
  },
  {
    "objectID": "slides/day1/reproducibility.html#why-do-open-science-1",
    "href": "slides/day1/reproducibility.html#why-do-open-science-1",
    "title": "Reproducibility in linguistic research and R",
    "section": "1.2 Why do Open Science?",
    "text": "1.2 Why do Open Science?\n\n\n\nopen science is good science\nit encourages organisation and planning\n\nhelpful for future you\n\nincreases transparency\n\nwithout transparency we cannot inspect evidence ourselves\nor ensure the claims match the evidence\n\nmakes our work more robust\n\nso future work stands on solid ground\n\nnot all-or-nothing\nthere are things I consider the bare minimum\n\ndetailed experiment plan, ideally public\nopenly available materials (e.g., stimuli)\nshare code and data\n\nthe important thing is to do what you can\n\nwhich Open Science research practices in Figure 1 are relevant related to reproducibility?\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: Image source: Kathawalla et al. (2021) (all rights reserved)\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe replication crisis\n\n\n\n\n\nThe replication crisis refers to the failure of many replication studies to replicate the findings of influential studies. The result of this “crisis” is a move towards Open Science Practices, which emphasise transparency along all stages of research (conception, planning, data collection, data cleaning, data analysis, reporting).\nThe issue became more widespread with the publication of Ioannidis (2005), entitled Most published research findigns are false. This paper defined bias in terms of design, analysis, and presentation factors with a focus on issues with p-values and statistical power. Since then there have been many replication attempts of influential (and lesser influential) papers. Strikingly, Open Science Collaboration (2015) reports 100 psychological studies run by 270 collaborators. They reported significant effects in only 36% of replications, with 47% of originally reported effects falling within 95% CIs of the replication effect. In essence: fewer significant findings and smaller effect sizes were found in replication studies compared to the original 100 studies Figure 2.\n\n\n\n\n\n\n\n\nFigure 2: Source: Open Science Collaboration (2015) (all rights reserved)",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Reproducibility in linguistic research and R"
    ]
  },
  {
    "objectID": "slides/day1/reproducibility.html#reproducibility-vs.-replication-1",
    "href": "slides/day1/reproducibility.html#reproducibility-vs.-replication-1",
    "title": "Reproducibility in linguistic research and R",
    "section": "2.1 Reproducibility vs. replication",
    "text": "2.1 Reproducibility vs. replication\n\nthe two terms have been used interchangably in the past (e.g., in the title of Open Science Collaboration, 2015)\n\nwe’ll define them as follows (and this is becoming the standard distinction, imo)\n\n\n\n\nReproducibility\n\nre-analysing the same data using (ideally) the same scripts, software, etc\naim: produce the same results (means, model estimates, etc.)\nwhy: tests for errors, coding mistakes, biases, etc.\n\n\nReplication\n\nre-running a previous experiment, ideally with the same materials, set-up, etc.\nideally the same analysis workflow as the original study would also be used (i.e., like reproducing the analyses but with new data)\naim: test whether results are replicated with new data in terms of direction and magnitude\n\n\n\n\nin short:\n\nreproducibility = re-analyses of the same data\nreplication = collection of new data",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Reproducibility in linguistic research and R"
    ]
  },
  {
    "objectID": "slides/day1/reproducibility.html#practice-fair-principles",
    "href": "slides/day1/reproducibility.html#practice-fair-principles",
    "title": "Reproducibility in linguistic research and R",
    "section": "4.1 Practice FAIR principles",
    "text": "4.1 Practice FAIR principles\n\n\nguidelines for sharing digital resources\nrefers broadly to data, but we’ll consider it in terms of analyses\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Source: National Library of Medicine (all rights reserved)\n\n\n\n\n\n\n\nfindable and accesssible refer to where materials are stored\n\nin findable repositories\nthat are accessible, i.e., do not require an account\n\ninteroperable and reusable emphasise the format of data (and code)\n\nthe importance of future use\nand use beyond your precise computational environment",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Reproducibility in linguistic research and R"
    ]
  },
  {
    "objectID": "slides/day1/reproducibility.html#code-review",
    "href": "slides/day1/reproducibility.html#code-review",
    "title": "Reproducibility in linguistic research and R",
    "section": "4.2 Code review",
    "text": "4.2 Code review\n\na great way to test the FAIR principles\n\ncode review!\ni.e., have a colleague try to access your data/run your code\n\neither via an online repository\nor send them your project folder",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Reproducibility in linguistic research and R"
    ]
  },
  {
    "objectID": "slides/day1/reproducibility.html#data-and-code-availability",
    "href": "slides/day1/reproducibility.html#data-and-code-availability",
    "title": "Reproducibility in linguistic research and R",
    "section": "5.1 Data and code availability",
    "text": "5.1 Data and code availability\n\n\n\n“data available upon (reasonable) request”\n\ngenerally not true\n\ndata was not available in 68% of the most cited psychology studies (2006-2016) (Hardwicke & Ioannidis, 2018)\n\na further 18% were available with restrictions\nonly 11% available without restriction\n\ndata alone is not sufficient\n\n‘Data Analysis’ sections are rarely exhaustive/unambiguous\nvery difficult to re-create analyses without code\ne.g., is data trimming explicitly defined?\n\nthis will even affect descriptive statistics\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 5: Source: Hardwicke & Ioannidis (2018), p. 6 (all rights reserved)",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Reproducibility in linguistic research and R"
    ]
  },
  {
    "objectID": "slides/day1/reproducibility.html#share-the-code-not-just-the-data",
    "href": "slides/day1/reproducibility.html#share-the-code-not-just-the-data",
    "title": "Reproducibility in linguistic research and R",
    "section": "5.2 Share the code, not just the data",
    "text": "5.2 Share the code, not just the data\n\nWhy?\n\nkey details are often missing from ‘Methods’ sections\n\nsuggestions for researchers from Laurinavichyute et al. (2022)\n\n\n\n\nShare data in usable form\n\nwith pre-processing code\n\nUse publicly accessible repositories\n\ne.g., OSF\n\nUse non-proprietary data formats\n\ne.g., not .xls files (Excel)\n\n\n\n\nProvide documentation\n\ne.g., README, data dictionaries\n\nShare code and data\n\nthey estimate a 38% increase in reproducibility\n\nTeach data management and computing skills\n\nthat’s what this course is for!",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Reproducibility in linguistic research and R"
    ]
  },
  {
    "objectID": "slides/day1/reproducibility.html#data-and-code-neq-reproducibility",
    "href": "slides/day1/reproducibility.html#data-and-code-neq-reproducibility",
    "title": "Reproducibility in linguistic research and R",
    "section": "5.3 Data and code \\(\\neq\\) Reproducibility",
    "text": "5.3 Data and code \\(\\neq\\) Reproducibility\n\neven including code does not guarantee reproducibility\naccess to data and code do not mean analyses are reproducible\nwhat can go wrong? Examples from Laurinavichyute et al. (2022)\n\n\n\n\nData problems\n\ninaccessible data\nincomplete data (e.g., 2/3 experiments)\n\nCode problems\n\nincomplete code\nerror messages\ncode rot: outdated syntax or environment\nproprietary software\n\n\n\n\nDocumentation problems\n\ndata difficult to interpret\nno README file/data dictionary\nunclear folder/file/variable naming convention\nmanuscript contradicts code\n\nUnclear terms of use\n\nno licence specification",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Reproducibility in linguistic research and R"
    ]
  },
  {
    "objectID": "slides/day1/reproducibility.html#what-should-ideally-be-shared",
    "href": "slides/day1/reproducibility.html#what-should-ideally-be-shared",
    "title": "Reproducibility in linguistic research and R",
    "section": "5.4 What should (ideally) be shared?",
    "text": "5.4 What should (ideally) be shared?\n\n\n\nmaterials\n\nprotocols\nstimuli\nexperiment set-up\n\ndocumentation\n\nREADME\nmetadata\n\n\n\n\ndata\n\nraw\n\ne.g., text files, audio, video, or images\n\nprocessed\n\nanalysis code\n\npre-processing\nanalyses\n\n\n\n\n\n\n\nmaterials are helpful for replication\n\nbut also for inspection of e.g., design\n\n\n\n\ndata and code are necessary for reproducibility\n\nalong with proper documentation of software used",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Reproducibility in linguistic research and R"
    ]
  },
  {
    "objectID": "slides/day1/reproducibility.html#reproducibility-rates-in-linguistic-research",
    "href": "slides/day1/reproducibility.html#reproducibility-rates-in-linguistic-research",
    "title": "Reproducibility in linguistic research and R",
    "section": "6.1 Reproducibility rates in linguistic research",
    "text": "6.1 Reproducibility rates in linguistic research\n\n\n\n\n\n\n\n\n\n\nFigure 6: Source: Bochynska et al. (2023), p. 11 (all rights reserved)\n\n\n\n\n\n\n\nmeta-analysis of 519 randomly sampled articles from various linguistic journales\n\npre- and post-reproducibility crisis (2008/9, 2018/19) (Bochynska et al., 2023)\ndifferentiated between primary (collected for study) and secondary (pre-existing) data\n\nreported a post-RC increase in shared materials, data, and analyses\n\nbut still low rates of each\n\nhigher rates of secondary data sharing, presumably due to publicly available corpora\ndata shared more often than analyses, pre- and post-RC",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Reproducibility in linguistic research and R"
    ]
  },
  {
    "objectID": "slides/day1/reproducibility.html#journal-of-memory-and-language",
    "href": "slides/day1/reproducibility.html#journal-of-memory-and-language",
    "title": "Reproducibility in linguistic research and R",
    "section": "6.2 Journal of Memory and Language",
    "text": "6.2 Journal of Memory and Language\n\nmeta-analysis of articles from JML (Laurinavichyute et al., 2022)\n\nbefore and after an Open Science Policy was introduced in 2019\n\n\n\n\n\n\n\n\n\n\nFigure 7: Source: Laurinavichyute et al. (2022), p. 5 (all rights reserved)\n\n\n\n\n\n\ncode and data availability improved\nbut reproducibility rate ranged from 34-56%, depending on criteria\nhigher rates compared to field-wide meta-analysis (Bochynska et al., 2023)",
    "crumbs": [
      "D. Palleschi",
      "Day 1: Introduction to reproducibility",
      "Reproducibility in linguistic research and R"
    ]
  },
  {
    "objectID": "examples/literate-programming.html",
    "href": "examples/literate-programming.html",
    "title": "Literate programming",
    "section": "",
    "text": "Packages\nInstall the tidyverse and here packages. This will not run when we render the script.\n\n# install packages\ninstall.packages(\"tidyverse\")\ninstall.packages(\"here\")\n\nLoad required packages.\n\n# load packages\nlibrary(tidyverse)\nlibrary(here)\n\nPrint the project directory filepath using the here package.\n\n# print project directory\nhere()\n\n[1] \"/Users/danielapalleschi/Documents/Academic DP/Workshops/taught/SSOL 2024 Reproducibility workshop\""
  }
]